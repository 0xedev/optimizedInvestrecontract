{
	"id": "47a105eec72f3a42840ca2ae741ef836",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"Optimized_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: @openzeppelin/contracts/utils/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n\n// File: Optimized.sol\n\n\npragma solidity 0.8.30;\n\n\n\n\n\n/**\n * @title investreAutoBuy\n * @dev Ultra-lightweight auto-buy contract optimized for <15k gas per transaction\n * \n * Design Philosophy:\n * - Hard-coded trusted routers for maximum gas efficiency\n * - Users approve routers directly to pull USDC\n * - Backend handles validation, tracking, and swap execution\n * - Standard USDC approval for simple UX\n * - Minimal gas footprint for microtransactions\n */\ncontract investreAutoBuy is Ownable, Pausable, ReentrancyGuard {\n    IERC20 public immutable usdc;\n\n    // Hard-coded trusted DEX routers (Base mainnet)\n    address public constant _OPENOCEAN_ROUTER = 0x6352a56caadC4F1E25CD6c75970Fa768A3304e64;\n    address public constant _KYBERSWAP_ROUTER = 0x6131B5fae19EA4f9D964eAc0408E4408b66337b5;\n\n    // Router IDs for gas-efficient function calls\n    uint8 public constant OPENOCEAN_ID = 0;\n    uint8 public constant KYBERSWAP_ID = 1;\n\n    // Events - minimal and efficient\n    event AutoBuyApproved(address indexed user, uint256 usdcAmount, address indexed router);\n\n    constructor(address _usdc, address initialOwner) Ownable(initialOwner) {\n        usdc = IERC20(_usdc);\n    }\n\n    /**\n     * @dev Ultra-light auto-buy approval function (hard-coded routers)\n     * @param user User's wallet address\n     * @param usdcAmount Amount of USDC to approve\n     * @param routerId Router ID (0=OpenOcean, 1=KyberSwap)\n     */\n    function approveAutoBuy(\n        address user,\n        uint256 usdcAmount,\n        uint8 routerId\n    ) external onlyOwner whenNotPaused nonReentrant {\n        address router;\n        if (routerId == OPENOCEAN_ID) {\n            router = _OPENOCEAN_ROUTER;\n        } else if (routerId == KYBERSWAP_ID) {\n            router = _KYBERSWAP_ROUTER;\n        } else {\n            revert(\"Invalid router ID\");\n        }\n        require(usdc.allowance(user, router) >= usdcAmount, \"Insufficient USDC allowance for router\");\n        emit AutoBuyApproved(user, usdcAmount, router);\n    }\n\n    /**\n     * @dev Batch auto-buy approval for multiple users/amounts/routers//\n     * @param users Array of user addresses\n     * @param usdcAmounts Array of USDC amounts\n     * @param routerIds Array of router IDs\n     */\n    function batchAutoBuy(\n        address[] calldata users,\n        uint256[] calldata usdcAmounts,\n        uint8[] calldata routerIds\n    ) external onlyOwner whenNotPaused nonReentrant {\n        require(users.length == usdcAmounts.length && users.length == routerIds.length && users.length <= 100, \"Array length mismatch or too large\");\n        for (uint256 i = 0; i < users.length; i++) {\n            address router;\n            if (routerIds[i] == OPENOCEAN_ID) {\n                router = _OPENOCEAN_ROUTER;\n            } else if (routerIds[i] == KYBERSWAP_ID) {\n                router = _KYBERSWAP_ROUTER;\n            } else {\n                revert(\"Invalid router ID\");\n            }\n            require(usdc.allowance(users[i], router) >= usdcAmounts[i], \"Insufficient USDC allowance for router\");\n            emit AutoBuyApproved(users[i], usdcAmounts[i], router);\n        }\n    }\n\n    /**\n     * @dev Emergency pause\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @dev Unpause\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @dev Get router address by ID\n     * @param routerId Router ID (0=OpenOcean, 1=KyberSwap)\n     * @return Router contract address\n     */\n    function getRouterAddress(uint8 routerId) external pure returns (address) {\n        if (routerId == OPENOCEAN_ID) {\n            return _OPENOCEAN_ROUTER;\n        } else if (routerId == KYBERSWAP_ID) {\n            return _KYBERSWAP_ROUTER;\n        } else {\n            revert(\"Invalid router ID\");\n        }\n    }\n\n    /**\n     * @dev Get OpenOcean router address\n     * @return OpenOcean router address\n     */\n    function getOpenOceanRouter() external pure returns (address) {\n        return _OPENOCEAN_ROUTER;\n    }\n\n    /**\n     * @dev Get KyberSwap router address\n     * @return KyberSwap router address\n     */\n    function getKyberSwapRouter() external pure returns (address) {\n        return _KYBERSWAP_ROUTER;\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"Optimized_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Optimized_flattened.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Optimized_flattened.sol\":{\"keccak256\":\"0x1587a28b22bd0557b50b4b93e6080a2585e4ef86dee21646ba21861dd692124f\",\"urls\":[\"bzz-raw://bde6af26ca4ba9536021e09b7dcadfa2ea907eaedc6a6ee707d33abae53aa191\",\"dweb:/ipfs/QmVrmJUZjAhybb1aBMU9TYYt3tJMEivJyfdvGeN33sQgx5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Optimized_flattened.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Optimized_flattened.sol\":{\"keccak256\":\"0x1587a28b22bd0557b50b4b93e6080a2585e4ef86dee21646ba21861dd692124f\",\"urls\":[\"bzz-raw://bde6af26ca4ba9536021e09b7dcadfa2ea907eaedc6a6ee707d33abae53aa191\",\"dweb:/ipfs/QmVrmJUZjAhybb1aBMU9TYYt3tJMEivJyfdvGeN33sQgx5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Optimized_flattened.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Optimized_flattened.sol\":{\"keccak256\":\"0x1587a28b22bd0557b50b4b93e6080a2585e4ef86dee21646ba21861dd692124f\",\"urls\":[\"bzz-raw://bde6af26ca4ba9536021e09b7dcadfa2ea907eaedc6a6ee707d33abae53aa191\",\"dweb:/ipfs/QmVrmJUZjAhybb1aBMU9TYYt3tJMEivJyfdvGeN33sQgx5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "Optimized_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Optimized_flattened.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Optimized_flattened.sol\":{\"keccak256\":\"0x1587a28b22bd0557b50b4b93e6080a2585e4ef86dee21646ba21861dd692124f\",\"urls\":[\"bzz-raw://bde6af26ca4ba9536021e09b7dcadfa2ea907eaedc6a6ee707d33abae53aa191\",\"dweb:/ipfs/QmVrmJUZjAhybb1aBMU9TYYt3tJMEivJyfdvGeN33sQgx5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 257,
								"contract": "Optimized_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Optimized_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Optimized_flattened.sol\":{\"keccak256\":\"0x1587a28b22bd0557b50b4b93e6080a2585e4ef86dee21646ba21861dd692124f\",\"urls\":[\"bzz-raw://bde6af26ca4ba9536021e09b7dcadfa2ea907eaedc6a6ee707d33abae53aa191\",\"dweb:/ipfs/QmVrmJUZjAhybb1aBMU9TYYt3tJMEivJyfdvGeN33sQgx5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 366,
								"contract": "Optimized_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"investreAutoBuy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "AutoBuyApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "KYBERSWAP_ID",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "OPENOCEAN_ID",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_KYBERSWAP_ROUTER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_OPENOCEAN_ROUTER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "routerId",
									"type": "uint8"
								}
							],
							"name": "approveAutoBuy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "usdcAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint8[]",
									"name": "routerIds",
									"type": "uint8[]"
								}
							],
							"name": "batchAutoBuy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getKyberSwapRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOpenOceanRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "routerId",
									"type": "uint8"
								}
							],
							"name": "getRouterAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Ultra-lightweight auto-buy contract optimized for <15k gas per transaction  Design Philosophy: - Hard-coded trusted routers for maximum gas efficiency - Users approve routers directly to pull USDC - Backend handles validation, tracking, and swap execution - Standard USDC approval for simple UX - Minimal gas footprint for microtransactions",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approveAutoBuy(address,uint256,uint8)": {
								"details": "Ultra-light auto-buy approval function (hard-coded routers)",
								"params": {
									"routerId": "Router ID (0=OpenOcean, 1=KyberSwap)",
									"usdcAmount": "Amount of USDC to approve",
									"user": "User's wallet address"
								}
							},
							"batchAutoBuy(address[],uint256[],uint8[])": {
								"details": "Batch auto-buy approval for multiple users/amounts/routers//",
								"params": {
									"routerIds": "Array of router IDs",
									"usdcAmounts": "Array of USDC amounts",
									"users": "Array of user addresses"
								}
							},
							"getKyberSwapRouter()": {
								"details": "Get KyberSwap router address",
								"returns": {
									"_0": "KyberSwap router address"
								}
							},
							"getOpenOceanRouter()": {
								"details": "Get OpenOcean router address",
								"returns": {
									"_0": "OpenOcean router address"
								}
							},
							"getRouterAddress(uint8)": {
								"details": "Get router address by ID",
								"params": {
									"routerId": "Router ID (0=OpenOcean, 1=KyberSwap)"
								},
								"returns": {
									"_0": "Router contract address"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Emergency pause"
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "Unpause"
							}
						},
						"title": "investreAutoBuy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Optimized_flattened.sol\":13428:17190  contract investreAutoBuy is Ownable, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"Optimized_flattened.sol\":14042:14150  constructor(address _usdc, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Optimized_flattened.sol\":14099:14111  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Optimized_flattened.sol\":5043:5069  initialOwner == address(0) */\n  dup2\n  and\n    /* \"Optimized_flattened.sol\":5039:5134  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"Optimized_flattened.sol\":5092:5123  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"Optimized_flattened.sol\":5120:5121  0 */\n  0x00\n    /* \"Optimized_flattened.sol\":5092:5123  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"Optimized_flattened.sol\":5092:5123  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Optimized_flattened.sol\":5039:5134  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"Optimized_flattened.sol\":5143:5175  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"Optimized_flattened.sol\":5162:5174  initialOwner */\n  dup2\n    /* \"Optimized_flattened.sol\":5143:5161  _transferOwnership */\n  tag_12\n    /* \"Optimized_flattened.sol\":5143:5175  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"Optimized_flattened.sol\":11442:11443  1 */\n  0x01\n    /* \"Optimized_flattened.sol\":11646:11667  _status = NOT_ENTERED */\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Optimized_flattened.sol\":14123:14143  usdc = IERC20(_usdc) */\n  and\n  0x80\n  mstore\n    /* \"Optimized_flattened.sol\":13428:17190  contract investreAutoBuy is Ownable, Pausable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"Optimized_flattened.sol\":6682:6869  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"Optimized_flattened.sol\":6755:6771  address oldOwner */\n  0x00\n    /* \"Optimized_flattened.sol\":6774:6780  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Optimized_flattened.sol\":6790:6807  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"Optimized_flattened.sol\":6822:6862  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Optimized_flattened.sol\":6774:6780  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"Optimized_flattened.sol\":6822:6862  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"Optimized_flattened.sol\":6755:6771  address oldOwner */\n  swap1\n    /* \"Optimized_flattened.sol\":6822:6862  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Optimized_flattened.sol\":6745:6869  {... */\n  pop\n    /* \"Optimized_flattened.sol\":6682:6869  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  0x00\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_22:\n    /* \"#utility.yul\":375:415   */\n  tag_23\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_24\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:697   */\ntag_18:\n    /* \"Optimized_flattened.sol\":13428:17190  contract investreAutoBuy is Ownable, Pausable, ReentrancyGuard {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x92ed5054041280b2f98f14bc4e303e3331c98df3b59420ba770a6dfa51c0ab61\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Optimized_flattened.sol\":13428:17190  contract investreAutoBuy is Ownable, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x612e3146\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x9f1f61a0\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9f1f61a0\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa4518efb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcac73ed7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x612e3146\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x48fcdc7b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x57df19e6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      dup1\n      0x18c786af\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1e8bcca5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2b15e47c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3e413bee\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Optimized_flattened.sol\":13821:13859  uint8 public constant OPENOCEAN_ID = 0 */\n    tag_3:\n      tag_22\n        /* \"Optimized_flattened.sol\":13858:13859  0 */\n      0x00\n        /* \"Optimized_flattened.sol\":13821:13859  uint8 public constant OPENOCEAN_ID = 0 */\n      dup2\n      jump\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":186:190   */\n      0xff\n        /* \"#utility.yul\":174:191   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":156:192   */\n      dup2\n      mstore\n        /* \"#utility.yul\":144:146   */\n      0x20\n        /* \"#utility.yul\":129:147   */\n      add\n        /* \"Optimized_flattened.sol\":13821:13859  uint8 public constant OPENOCEAN_ID = 0 */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Optimized_flattened.sol\":15202:16088  function batchAutoBuy(... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"Optimized_flattened.sol\":14396:14971  function approveAutoBuy(... */\n    tag_5:\n      tag_26\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n        /* \"Optimized_flattened.sol\":13497:13525  IERC20 public immutable usdc */\n    tag_6:\n      tag_34\n      immutable(\"0x92ed5054041280b2f98f14bc4e303e3331c98df3b59420ba770a6dfa51c0ab61\")\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2522:2554   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2504:2555   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2492:2494   */\n      0x20\n        /* \"#utility.yul\":2477:2495   */\n      add\n        /* \"Optimized_flattened.sol\":13497:13525  IERC20 public immutable usdc */\n      tag_24\n        /* \"#utility.yul\":2345:2561   */\n      jump\n        /* \"Optimized_flattened.sol\":16241:16306  function unpause() external onlyOwner {... */\n    tag_7:\n      tag_26\n      tag_39\n      jump\t// in\n        /* \"Optimized_flattened.sol\":13865:13903  uint8 public constant KYBERSWAP_ID = 1 */\n    tag_8:\n      tag_22\n        /* \"Optimized_flattened.sol\":13902:13903  1 */\n      0x01\n        /* \"Optimized_flattened.sol\":13865:13903  uint8 public constant KYBERSWAP_ID = 1 */\n      dup2\n      jump\n        /* \"Optimized_flattened.sol\":17085:17188  function getKyberSwapRouter() external pure returns (address) {... */\n    tag_9:\n        /* \"Optimized_flattened.sol\":13721:13763  0x6131B5fae19EA4f9D964eAc0408E4408b66337b5 */\n      0x6131b5fae19ea4f9d964eac0408e4408b66337b5\n        /* \"Optimized_flattened.sol\":17085:17188  function getKyberSwapRouter() external pure returns (address) {... */\n      jump(tag_34)\n        /* \"Optimized_flattened.sol\":8575:8659  function paused() public view virtual returns (bool) {... */\n    tag_10:\n        /* \"Optimized_flattened.sol\":8622:8626  bool */\n      0x00\n        /* \"Optimized_flattened.sol\":8645:8652  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Optimized_flattened.sol\":8575:8659  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":2939:2953   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2932:2954   */\n      iszero\n        /* \"#utility.yul\":2914:2955   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2902:2904   */\n      0x20\n        /* \"#utility.yul\":2887:2905   */\n      add\n        /* \"Optimized_flattened.sol\":8575:8659  function paused() public view virtual returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":2774:2961   */\n      jump\n        /* \"Optimized_flattened.sol\":16879:16982  function getOpenOceanRouter() external pure returns (address) {... */\n    tag_11:\n        /* \"Optimized_flattened.sol\":13629:13671  0x6352a56caadC4F1E25CD6c75970Fa768A3304e64 */\n      0x6352a56caadc4f1e25cd6c75970fa768a3304e64\n        /* \"Optimized_flattened.sol\":16879:16982  function getOpenOceanRouter() external pure returns (address) {... */\n      jump(tag_34)\n        /* \"Optimized_flattened.sol\":6063:6164  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_26\n      tag_55\n      jump\t// in\n        /* \"Optimized_flattened.sol\":16138:16199  function pause() external onlyOwner {... */\n    tag_13:\n      tag_26\n      tag_57\n      jump\t// in\n        /* \"Optimized_flattened.sol\":5408:5493  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"Optimized_flattened.sol\":5454:5461  address */\n      0x00\n        /* \"Optimized_flattened.sol\":5480:5486  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Optimized_flattened.sol\":5408:5493  function owner() public view virtual returns (address) {... */\n      jump(tag_34)\n        /* \"Optimized_flattened.sol\":13677:13763  address public constant _KYBERSWAP_ROUTER = 0x6131B5fae19EA4f9D964eAc0408E4408b66337b5 */\n    tag_15:\n      tag_34\n        /* \"Optimized_flattened.sol\":13721:13763  0x6131B5fae19EA4f9D964eAc0408E4408b66337b5 */\n      0x6131b5fae19ea4f9d964eac0408e4408b66337b5\n        /* \"Optimized_flattened.sol\":13677:13763  address public constant _KYBERSWAP_ROUTER = 0x6131B5fae19EA4f9D964eAc0408E4408b66337b5 */\n      dup2\n      jump\n        /* \"Optimized_flattened.sol\":13585:13671  address public constant _OPENOCEAN_ROUTER = 0x6352a56caadC4F1E25CD6c75970Fa768A3304e64 */\n    tag_16:\n      tag_34\n        /* \"Optimized_flattened.sol\":13629:13671  0x6352a56caadC4F1E25CD6c75970Fa768A3304e64 */\n      0x6352a56caadc4f1e25cd6c75970fa768a3304e64\n        /* \"Optimized_flattened.sol\":13585:13671  address public constant _OPENOCEAN_ROUTER = 0x6352a56caadC4F1E25CD6c75970Fa768A3304e64 */\n      dup2\n      jump\n        /* \"Optimized_flattened.sol\":16464:16776  function getRouterAddress(uint8 routerId) external pure returns (address) {... */\n    tag_17:\n      tag_34\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"Optimized_flattened.sol\":6313:6528  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_26\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"Optimized_flattened.sol\":15202:16088  function batchAutoBuy(... */\n    tag_29:\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      tag_77\n        /* \"Optimized_flattened.sol\":5301:5312  _checkOwner */\n      tag_78\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"Optimized_flattened.sol\":8199:8218  _requireNotPaused() */\n      tag_80\n        /* \"Optimized_flattened.sol\":8199:8216  _requireNotPaused */\n      tag_81\n        /* \"Optimized_flattened.sol\":8199:8218  _requireNotPaused() */\n      jump\t// in\n    tag_80:\n        /* \"Optimized_flattened.sol\":12085:12106  _nonReentrantBefore() */\n      tag_83\n        /* \"Optimized_flattened.sol\":12085:12104  _nonReentrantBefore */\n      tag_84\n        /* \"Optimized_flattened.sol\":12085:12106  _nonReentrantBefore() */\n      jump\t// in\n    tag_83:\n        /* \"Optimized_flattened.sol\":15404:15438  users.length == usdcAmounts.length */\n      dup5\n      dup4\n      eq\n        /* \"Optimized_flattened.sol\":15404:15474  users.length == usdcAmounts.length && users.length == routerIds.length */\n      dup1\n      iszero\n      tag_86\n      jumpi\n      pop\n        /* \"Optimized_flattened.sol\":15442:15474  users.length == routerIds.length */\n      dup5\n      dup2\n      eq\n        /* \"Optimized_flattened.sol\":15404:15474  users.length == usdcAmounts.length && users.length == routerIds.length */\n    tag_86:\n        /* \"Optimized_flattened.sol\":15404:15497  users.length == usdcAmounts.length && users.length == routerIds.length && users.length <= 100 */\n      dup1\n      iszero\n      tag_87\n      jumpi\n      pop\n        /* \"Optimized_flattened.sol\":15494:15497  100 */\n      0x64\n        /* \"Optimized_flattened.sol\":15478:15497  users.length <= 100 */\n      dup6\n      gt\n      iszero\n        /* \"Optimized_flattened.sol\":15404:15497  users.length == usdcAmounts.length && users.length == routerIds.length && users.length <= 100 */\n    tag_87:\n        /* \"Optimized_flattened.sol\":15396:15536  require(users.length == usdcAmounts.length && users.length == routerIds.length && users.length <= 100, \"Array length mismatch or too large\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3546:3548   */\n      0x20\n        /* \"Optimized_flattened.sol\":15396:15536  require(users.length == usdcAmounts.length && users.length == routerIds.length && users.length <= 100, \"Array length mismatch or too large\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3528:3549   */\n      mstore\n        /* \"#utility.yul\":3585:3587   */\n      0x22\n        /* \"#utility.yul\":3565:3583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3558:3588   */\n      mstore\n        /* \"#utility.yul\":3624:3658   */\n      0x4172726179206c656e677468206d69736d61746368206f7220746f6f206c6172\n        /* \"#utility.yul\":3604:3622   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3597:3659   */\n      mstore\n      shl(0xf0, 0x6765)\n        /* \"#utility.yul\":3675:3693   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3668:3700   */\n      mstore\n        /* \"#utility.yul\":3717:3736   */\n      0x84\n      add\n        /* \"Optimized_flattened.sol\":15396:15536  require(users.length == usdcAmounts.length && users.length == routerIds.length && users.length <= 100, \"Array length mismatch or too large\") */\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Optimized_flattened.sol\":15551:15560  uint256 i */\n      0x00\n        /* \"Optimized_flattened.sol\":15546:16082  for (uint256 i = 0; i < users.length; i++) {... */\n    tag_91:\n        /* \"Optimized_flattened.sol\":15566:15582  i < users.length */\n      dup6\n      dup2\n      lt\n        /* \"Optimized_flattened.sol\":15546:16082  for (uint256 i = 0; i < users.length; i++) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"Optimized_flattened.sol\":15603:15617  address router */\n      0x00\n      dup1\n        /* \"Optimized_flattened.sol\":15635:15644  routerIds */\n      dup5\n      dup5\n        /* \"Optimized_flattened.sol\":15645:15646  i */\n      dup5\n        /* \"Optimized_flattened.sol\":15635:15647  routerIds[i] */\n      dup2\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_97:\n        /* \"Optimized_flattened.sol\":15635:15663  routerIds[i] == OPENOCEAN_ID */\n      0xff\n      and\n      sub\n        /* \"Optimized_flattened.sol\":15631:15889  if (routerIds[i] == OPENOCEAN_ID) {... */\n      tag_98\n      jumpi\n      pop\n        /* \"Optimized_flattened.sol\":13629:13671  0x6352a56caadC4F1E25CD6c75970Fa768A3304e64 */\n      0x6352a56caadc4f1e25cd6c75970fa768a3304e64\n        /* \"Optimized_flattened.sol\":15631:15889  if (routerIds[i] == OPENOCEAN_ID) {... */\n      jump(tag_104)\n    tag_98:\n        /* \"Optimized_flattened.sol\":13902:13903  1 */\n      0x01\n        /* \"Optimized_flattened.sol\":15734:15743  routerIds */\n      dup5\n      dup5\n        /* \"Optimized_flattened.sol\":15744:15745  i */\n      dup5\n        /* \"Optimized_flattened.sol\":15734:15746  routerIds[i] */\n      dup2\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_101\n      tag_96\n      jump\t// in\n    tag_101:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_102:\n        /* \"Optimized_flattened.sol\":15734:15762  routerIds[i] == KYBERSWAP_ID */\n      0xff\n      and\n      sub\n        /* \"Optimized_flattened.sol\":15730:15889  if (routerIds[i] == KYBERSWAP_ID) {... */\n      tag_103\n      jumpi\n      pop\n        /* \"Optimized_flattened.sol\":13721:13763  0x6131B5fae19EA4f9D964eAc0408E4408b66337b5 */\n      0x6131b5fae19ea4f9d964eac0408e4408b66337b5\n        /* \"Optimized_flattened.sol\":15730:15889  if (routerIds[i] == KYBERSWAP_ID) {... */\n      jump(tag_104)\n    tag_103:\n        /* \"Optimized_flattened.sol\":15847:15874  revert(\"Invalid router ID\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4081:4083   */\n      0x20\n        /* \"Optimized_flattened.sol\":15847:15874  revert(\"Invalid router ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4063:4084   */\n      mstore\n        /* \"#utility.yul\":4120:4122   */\n      0x11\n        /* \"#utility.yul\":4100:4118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4093:4123   */\n      mstore\n      shl(0x7a, 0x125b9d985b1a59081c9bdd5d195c881251)\n        /* \"#utility.yul\":4139:4157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4132:4179   */\n      mstore\n        /* \"#utility.yul\":4196:4214   */\n      0x64\n      add\n        /* \"Optimized_flattened.sol\":15847:15874  revert(\"Invalid router ID\") */\n      tag_89\n        /* \"#utility.yul\":3879:4220   */\n      jump\n        /* \"Optimized_flattened.sol\":15730:15889  if (routerIds[i] == KYBERSWAP_ID) {... */\n    tag_104:\n        /* \"Optimized_flattened.sol\":15946:15957  usdcAmounts */\n      dup6\n      dup6\n        /* \"Optimized_flattened.sol\":15958:15959  i */\n      dup4\n        /* \"Optimized_flattened.sol\":15946:15960  usdcAmounts[i] */\n      dup2\n      dup2\n      lt\n      tag_108\n      jumpi\n      tag_108\n      tag_96\n      jump\t// in\n    tag_108:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Optimized_flattened.sol\":15910:15914  usdc */\n      immutable(\"0x92ed5054041280b2f98f14bc4e303e3331c98df3b59420ba770a6dfa51c0ab61\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Optimized_flattened.sol\":15910:15924  usdc.allowance */\n      and\n      0xdd62ed3e\n        /* \"Optimized_flattened.sol\":15925:15930  users */\n      dup11\n      dup11\n        /* \"Optimized_flattened.sol\":15931:15932  i */\n      dup7\n        /* \"Optimized_flattened.sol\":15925:15933  users[i] */\n      dup2\n      dup2\n      lt\n      tag_110\n      jumpi\n      tag_110\n      tag_96\n      jump\t// in\n    tag_110:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_111:\n        /* \"Optimized_flattened.sol\":15910:15942  usdc.allowance(users[i], router) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4417:4449   */\n      swap2\n      dup3\n      and\n        /* \"Optimized_flattened.sol\":15910:15942  usdc.allowance(users[i], router) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4399:4450   */\n      mstore\n        /* \"#utility.yul\":4486:4518   */\n      swap1\n      dup6\n      and\n        /* \"#utility.yul\":4466:4484   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4459:4519   */\n      mstore\n        /* \"#utility.yul\":4372:4390   */\n      0x44\n      add\n        /* \"Optimized_flattened.sol\":15910:15942  usdc.allowance(users[i], router) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"Optimized_flattened.sol\":15910:15960  usdc.allowance(users[i], router) >= usdcAmounts[i] */\n      lt\n      iszero\n        /* \"Optimized_flattened.sol\":15902:16003  require(usdc.allowance(users[i], router) >= usdcAmounts[i], \"Insufficient USDC allowance for router\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_120\n      jump\t// in\n    tag_118:\n        /* \"Optimized_flattened.sol\":16064:16070  router */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Optimized_flattened.sol\":16022:16071  AutoBuyApproved(users[i], usdcAmounts[i], router) */\n      and\n        /* \"Optimized_flattened.sol\":16038:16043  users */\n      dup9\n      dup9\n        /* \"Optimized_flattened.sol\":16044:16045  i */\n      dup5\n        /* \"Optimized_flattened.sol\":16038:16046  users[i] */\n      dup2\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_122\n      tag_96\n      jump\t// in\n    tag_122:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Optimized_flattened.sol\":16022:16071  AutoBuyApproved(users[i], usdcAmounts[i], router) */\n      and\n      0xeab9cd112c05d2451f24acf7702297c9705b2115923d562c663c5272a60fe76f\n        /* \"Optimized_flattened.sol\":16048:16059  usdcAmounts */\n      dup9\n      dup9\n        /* \"Optimized_flattened.sol\":16060:16061  i */\n      dup7\n        /* \"Optimized_flattened.sol\":16048:16062  usdcAmounts[i] */\n      dup2\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_125\n      tag_96\n      jump\t// in\n    tag_125:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Optimized_flattened.sol\":16022:16071  AutoBuyApproved(users[i], usdcAmounts[i], router) */\n      mload(0x40)\n      tag_126\n      swap2\n        /* \"#utility.yul\":5272:5297   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5260:5262   */\n      0x20\n        /* \"#utility.yul\":5245:5263   */\n      add\n      swap1\n        /* \"#utility.yul\":5126:5303   */\n      jump\n        /* \"Optimized_flattened.sol\":16022:16071  AutoBuyApproved(users[i], usdcAmounts[i], router) */\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"Optimized_flattened.sol\":15584:15587  i++ */\n      0x01\n      add\n        /* \"Optimized_flattened.sol\":15546:16082  for (uint256 i = 0; i < users.length; i++) {... */\n      jump(tag_91)\n    tag_92:\n      pop\n        /* \"Optimized_flattened.sol\":12127:12147  _nonReentrantAfter() */\n      tag_128\n        /* \"Optimized_flattened.sol\":11442:11443  1 */\n      0x01\n        /* \"Optimized_flattened.sol\":12653:12674  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"Optimized_flattened.sol\":12473:12681  function _nonReentrantAfter() private {... */\n      jump\n        /* \"Optimized_flattened.sol\":12127:12147  _nonReentrantAfter() */\n    tag_128:\n        /* \"Optimized_flattened.sol\":15202:16088  function batchAutoBuy(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Optimized_flattened.sol\":14396:14971  function approveAutoBuy(... */\n    tag_33:\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      tag_131\n        /* \"Optimized_flattened.sol\":5301:5312  _checkOwner */\n      tag_78\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"Optimized_flattened.sol\":8199:8218  _requireNotPaused() */\n      tag_133\n        /* \"Optimized_flattened.sol\":8199:8216  _requireNotPaused */\n      tag_81\n        /* \"Optimized_flattened.sol\":8199:8218  _requireNotPaused() */\n      jump\t// in\n    tag_133:\n        /* \"Optimized_flattened.sol\":12085:12106  _nonReentrantBefore() */\n      tag_135\n        /* \"Optimized_flattened.sol\":12085:12104  _nonReentrantBefore */\n      tag_84\n        /* \"Optimized_flattened.sol\":12085:12106  _nonReentrantBefore() */\n      jump\t// in\n    tag_135:\n        /* \"Optimized_flattened.sol\":14556:14570  address router */\n      0x00\n        /* \"Optimized_flattened.sol\":14584:14608  routerId == OPENOCEAN_ID */\n      0xff\n      dup3\n      and\n        /* \"Optimized_flattened.sol\":14580:14806  if (routerId == OPENOCEAN_ID) {... */\n      tag_137\n      jumpi\n      pop\n        /* \"Optimized_flattened.sol\":13629:13671  0x6352a56caadC4F1E25CD6c75970Fa768A3304e64 */\n      0x6352a56caadc4f1e25cd6c75970fa768a3304e64\n        /* \"Optimized_flattened.sol\":14580:14806  if (routerId == OPENOCEAN_ID) {... */\n      jump(tag_140)\n    tag_137:\n      not(0x00)\n        /* \"Optimized_flattened.sol\":14671:14695  routerId == KYBERSWAP_ID */\n      0xff\n      dup4\n      and\n      add\n        /* \"Optimized_flattened.sol\":14667:14806  if (routerId == KYBERSWAP_ID) {... */\n      tag_103\n      jumpi\n      pop\n        /* \"Optimized_flattened.sol\":13721:13763  0x6131B5fae19EA4f9D964eAc0408E4408b66337b5 */\n      0x6131b5fae19ea4f9d964eac0408e4408b66337b5\n        /* \"Optimized_flattened.sol\":14667:14806  if (routerId == KYBERSWAP_ID) {... */\n    tag_140:\n        /* \"Optimized_flattened.sol\":14823:14851  usdc.allowance(user, router) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4417:4449   */\n      dup6\n      dup2\n      and\n        /* \"Optimized_flattened.sol\":14823:14851  usdc.allowance(user, router) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4399:4450   */\n      mstore\n        /* \"#utility.yul\":4486:4518   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":4466:4484   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4459:4519   */\n      mstore\n        /* \"Optimized_flattened.sol\":14855:14865  usdcAmount */\n      dup5\n      swap2\n        /* \"Optimized_flattened.sol\":14823:14827  usdc */\n      immutable(\"0x92ed5054041280b2f98f14bc4e303e3331c98df3b59420ba770a6dfa51c0ab61\")\n        /* \"Optimized_flattened.sol\":14823:14837  usdc.allowance */\n      swap1\n      swap2\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":4372:4390   */\n      0x44\n      add\n        /* \"Optimized_flattened.sol\":14823:14851  usdc.allowance(user, router) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_145:\n        /* \"Optimized_flattened.sol\":14823:14865  usdc.allowance(user, router) >= usdcAmount */\n      lt\n      iszero\n        /* \"Optimized_flattened.sol\":14815:14908  require(usdc.allowance(user, router) >= usdcAmount, \"Insufficient USDC allowance for router\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_120\n      jump\t// in\n    tag_146:\n        /* \"Optimized_flattened.sol\":14957:14963  router */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Optimized_flattened.sol\":14923:14964  AutoBuyApproved(user, usdcAmount, router) */\n      and\n        /* \"Optimized_flattened.sol\":14939:14943  user */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Optimized_flattened.sol\":14923:14964  AutoBuyApproved(user, usdcAmount, router) */\n      and\n      0xeab9cd112c05d2451f24acf7702297c9705b2115923d562c663c5272a60fe76f\n        /* \"Optimized_flattened.sol\":14945:14955  usdcAmount */\n      dup6\n        /* \"Optimized_flattened.sol\":14923:14964  AutoBuyApproved(user, usdcAmount, router) */\n      mload(0x40)\n      tag_148\n      swap2\n        /* \"#utility.yul\":5272:5297   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5260:5262   */\n      0x20\n        /* \"#utility.yul\":5245:5263   */\n      add\n      swap1\n        /* \"#utility.yul\":5126:5303   */\n      jump\n        /* \"Optimized_flattened.sol\":14923:14964  AutoBuyApproved(user, usdcAmount, router) */\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Optimized_flattened.sol\":14546:14971  {... */\n      pop\n        /* \"Optimized_flattened.sol\":12127:12147  _nonReentrantAfter() */\n      tag_149\n        /* \"Optimized_flattened.sol\":11442:11443  1 */\n      0x01\n        /* \"Optimized_flattened.sol\":12653:12674  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"Optimized_flattened.sol\":12473:12681  function _nonReentrantAfter() private {... */\n      jump\n        /* \"Optimized_flattened.sol\":12127:12147  _nonReentrantAfter() */\n    tag_149:\n        /* \"Optimized_flattened.sol\":14396:14971  function approveAutoBuy(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Optimized_flattened.sol\":16241:16306  function unpause() external onlyOwner {... */\n    tag_39:\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      tag_151\n        /* \"Optimized_flattened.sol\":5301:5312  _checkOwner */\n      tag_78\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"Optimized_flattened.sol\":16289:16299  _unpause() */\n      tag_153\n        /* \"Optimized_flattened.sol\":16289:16297  _unpause */\n      tag_154\n        /* \"Optimized_flattened.sol\":16289:16299  _unpause() */\n      jump\t// in\n    tag_153:\n        /* \"Optimized_flattened.sol\":16241:16306  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"Optimized_flattened.sol\":6063:6164  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      tag_159\n        /* \"Optimized_flattened.sol\":5301:5312  _checkOwner */\n      tag_78\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"Optimized_flattened.sol\":6127:6157  _transferOwnership(address(0)) */\n      tag_153\n        /* \"Optimized_flattened.sol\":6154:6155  0 */\n      0x00\n        /* \"Optimized_flattened.sol\":6127:6145  _transferOwnership */\n      tag_162\n        /* \"Optimized_flattened.sol\":6127:6157  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"Optimized_flattened.sol\":16138:16199  function pause() external onlyOwner {... */\n    tag_57:\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      tag_164\n        /* \"Optimized_flattened.sol\":5301:5312  _checkOwner */\n      tag_78\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      jump\t// in\n    tag_164:\n        /* \"Optimized_flattened.sol\":16184:16192  _pause() */\n      tag_153\n        /* \"Optimized_flattened.sol\":16184:16190  _pause */\n      tag_167\n        /* \"Optimized_flattened.sol\":16184:16192  _pause() */\n      jump\t// in\n        /* \"Optimized_flattened.sol\":16464:16776  function getRouterAddress(uint8 routerId) external pure returns (address) {... */\n    tag_70:\n        /* \"Optimized_flattened.sol\":16529:16536  address */\n      0x00\n        /* \"Optimized_flattened.sol\":16552:16576  routerId == OPENOCEAN_ID */\n      0xff\n      dup3\n      and\n        /* \"Optimized_flattened.sol\":16548:16770  if (routerId == OPENOCEAN_ID) {... */\n      tag_170\n      jumpi\n      pop\n        /* \"Optimized_flattened.sol\":13629:13671  0x6352a56caadC4F1E25CD6c75970Fa768A3304e64 */\n      0x6352a56caadc4f1e25cd6c75970fa768a3304e64\n      swap2\n        /* \"Optimized_flattened.sol\":16464:16776  function getRouterAddress(uint8 routerId) external pure returns (address) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Optimized_flattened.sol\":16548:16770  if (routerId == OPENOCEAN_ID) {... */\n    tag_170:\n      not(0x00)\n        /* \"Optimized_flattened.sol\":16637:16661  routerId == KYBERSWAP_ID */\n      0xff\n      dup4\n      and\n      add\n        /* \"Optimized_flattened.sol\":16633:16770  if (routerId == KYBERSWAP_ID) {... */\n      tag_103\n      jumpi\n      pop\n        /* \"Optimized_flattened.sol\":13721:13763  0x6131B5fae19EA4f9D964eAc0408E4408b66337b5 */\n      0x6131b5fae19ea4f9d964eac0408e4408b66337b5\n      swap2\n        /* \"Optimized_flattened.sol\":16464:16776  function getRouterAddress(uint8 routerId) external pure returns (address) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Optimized_flattened.sol\":16633:16770  if (routerId == KYBERSWAP_ID) {... */\n    tag_173:\n        /* \"Optimized_flattened.sol\":16464:16776  function getRouterAddress(uint8 routerId) external pure returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Optimized_flattened.sol\":6313:6528  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      tag_176\n        /* \"Optimized_flattened.sol\":5301:5312  _checkOwner */\n      tag_78\n        /* \"Optimized_flattened.sol\":5301:5314  _checkOwner() */\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Optimized_flattened.sol\":6397:6419  newOwner == address(0) */\n      dup2\n      and\n        /* \"Optimized_flattened.sol\":6393:6484  if (newOwner == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"Optimized_flattened.sol\":6442:6473  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"Optimized_flattened.sol\":6470:6471  0 */\n      0x00\n        /* \"Optimized_flattened.sol\":6442:6473  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2504:2555   */\n      mstore\n        /* \"#utility.yul\":2477:2495   */\n      0x24\n      add\n        /* \"Optimized_flattened.sol\":6442:6473  OwnableInvalidOwner(address(0)) */\n      tag_89\n        /* \"#utility.yul\":2345:2561   */\n      jump\n        /* \"Optimized_flattened.sol\":6393:6484  if (newOwner == address(0)) {... */\n    tag_178:\n        /* \"Optimized_flattened.sol\":6493:6521  _transferOwnership(newOwner) */\n      tag_180\n        /* \"Optimized_flattened.sol\":6512:6520  newOwner */\n      dup2\n        /* \"Optimized_flattened.sol\":6493:6511  _transferOwnership */\n      tag_162\n        /* \"Optimized_flattened.sol\":6493:6521  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_180:\n        /* \"Optimized_flattened.sol\":6313:6528  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Optimized_flattened.sol\":5566:5728  function _checkOwner() internal view virtual {... */\n    tag_78:\n        /* \"Optimized_flattened.sol\":5454:5461  address */\n      0x00\n        /* \"Optimized_flattened.sol\":5480:5486  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Optimized_flattened.sol\":3565:3575  msg.sender */\n      caller\n        /* \"Optimized_flattened.sol\":5625:5648  owner() != _msgSender() */\n      eq\n        /* \"Optimized_flattened.sol\":5621:5722  if (owner() != _msgSender()) {... */\n      tag_153\n      jumpi\n        /* \"Optimized_flattened.sol\":5671:5711  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"Optimized_flattened.sol\":3565:3575  msg.sender */\n      caller\n        /* \"Optimized_flattened.sol\":5671:5711  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2504:2555   */\n      mstore\n        /* \"#utility.yul\":2477:2495   */\n      0x24\n      add\n        /* \"Optimized_flattened.sol\":5671:5711  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_89\n        /* \"#utility.yul\":2345:2561   */\n      jump\n        /* \"Optimized_flattened.sol\":8727:8855  function _requireNotPaused() internal view virtual {... */\n    tag_81:\n        /* \"Optimized_flattened.sol\":8622:8626  bool */\n      0x00\n        /* \"Optimized_flattened.sol\":8645:8652  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Optimized_flattened.sol\":8788:8849  if (paused()) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"Optimized_flattened.sol\":8823:8838  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Optimized_flattened.sol\":12160:12467  function _nonReentrantBefore() private {... */\n    tag_84:\n        /* \"Optimized_flattened.sol\":11484:11485  2 */\n      0x02\n        /* \"Optimized_flattened.sol\":12287:12294  _status */\n      sload(0x01)\n        /* \"Optimized_flattened.sol\":12287:12305  _status == ENTERED */\n      sub\n        /* \"Optimized_flattened.sol\":12283:12369  if (_status == ENTERED) {... */\n      tag_192\n      jumpi\n        /* \"Optimized_flattened.sol\":12328:12358  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Optimized_flattened.sol\":12283:12369  if (_status == ENTERED) {... */\n    tag_192:\n        /* \"Optimized_flattened.sol\":11484:11485  2 */\n      0x02\n        /* \"Optimized_flattened.sol\":12443:12450  _status */\n      0x01\n        /* \"Optimized_flattened.sol\":12443:12460  _status = ENTERED */\n      sstore\n        /* \"Optimized_flattened.sol\":12160:12467  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"Optimized_flattened.sol\":9435:9552  function _unpause() internal virtual whenPaused {... */\n    tag_154:\n        /* \"Optimized_flattened.sol\":8446:8462  _requirePaused() */\n      tag_195\n        /* \"Optimized_flattened.sol\":8446:8460  _requirePaused */\n      tag_196\n        /* \"Optimized_flattened.sol\":8446:8462  _requirePaused() */\n      jump\t// in\n    tag_195:\n        /* \"Optimized_flattened.sol\":9503:9508  false */\n      0x00\n        /* \"Optimized_flattened.sol\":9493:9508  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"Optimized_flattened.sol\":9523:9545  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"Optimized_flattened.sol\":3565:3575  msg.sender */\n      caller\n        /* \"Optimized_flattened.sol\":9532:9544  _msgSender() */\n    tag_198:\n        /* \"Optimized_flattened.sol\":9523:9545  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2522:2554   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2504:2555   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2492:2494   */\n      0x20\n        /* \"#utility.yul\":2477:2495   */\n      add\n        /* \"Optimized_flattened.sol\":9523:9545  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Optimized_flattened.sol\":9435:9552  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"Optimized_flattened.sol\":6682:6869  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_162:\n        /* \"Optimized_flattened.sol\":6755:6771  address oldOwner */\n      0x00\n        /* \"Optimized_flattened.sol\":6774:6780  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Optimized_flattened.sol\":6790:6807  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"Optimized_flattened.sol\":6822:6862  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Optimized_flattened.sol\":6774:6780  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"Optimized_flattened.sol\":6822:6862  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"Optimized_flattened.sol\":6755:6771  address oldOwner */\n      swap1\n        /* \"Optimized_flattened.sol\":6822:6862  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Optimized_flattened.sol\":6745:6869  {... */\n      pop\n        /* \"Optimized_flattened.sol\":6682:6869  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Optimized_flattened.sol\":9188:9303  function _pause() internal virtual whenNotPaused {... */\n    tag_167:\n        /* \"Optimized_flattened.sol\":8199:8218  _requireNotPaused() */\n      tag_202\n        /* \"Optimized_flattened.sol\":8199:8216  _requireNotPaused */\n      tag_81\n        /* \"Optimized_flattened.sol\":8199:8218  _requireNotPaused() */\n      jump\t// in\n    tag_202:\n        /* \"Optimized_flattened.sol\":9247:9254  _paused */\n      0x00\n        /* \"Optimized_flattened.sol\":9247:9261  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"Optimized_flattened.sol\":9276:9296  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"Optimized_flattened.sol\":9283:9295  _msgSender() */\n      tag_198\n        /* \"Optimized_flattened.sol\":3565:3575  msg.sender */\n      caller\n      swap1\n        /* \"Optimized_flattened.sol\":3486:3582  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"Optimized_flattened.sol\":8927:9053  function _requirePaused() internal view virtual {... */\n    tag_196:\n        /* \"Optimized_flattened.sol\":8622:8626  bool */\n      0x00\n        /* \"Optimized_flattened.sol\":8645:8652  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Optimized_flattened.sol\":8985:9047  if (!paused()) {... */\n      tag_153\n      jumpi\n        /* \"Optimized_flattened.sol\":9021:9036  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":203:570   */\n    tag_210:\n        /* \"#utility.yul\":266:274   */\n      0x00\n        /* \"#utility.yul\":276:282   */\n      0x00\n        /* \"#utility.yul\":330:333   */\n      dup4\n        /* \"#utility.yul\":323:327   */\n      0x1f\n        /* \"#utility.yul\":315:321   */\n      dup5\n        /* \"#utility.yul\":311:328   */\n      add\n        /* \"#utility.yul\":307:334   */\n      slt\n        /* \"#utility.yul\":297:352   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":348:349   */\n      0x00\n        /* \"#utility.yul\":345:346   */\n      0x00\n        /* \"#utility.yul\":338:350   */\n      revert\n        /* \"#utility.yul\":297:352   */\n    tag_216:\n      pop\n        /* \"#utility.yul\":371:391   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":414:432   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":403:433   */\n      dup2\n      gt\n        /* \"#utility.yul\":400:450   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":446:447   */\n      0x00\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":436:448   */\n      revert\n        /* \"#utility.yul\":400:450   */\n    tag_217:\n        /* \"#utility.yul\":483:487   */\n      0x20\n        /* \"#utility.yul\":475:481   */\n      dup4\n        /* \"#utility.yul\":471:488   */\n      add\n        /* \"#utility.yul\":459:488   */\n      swap2\n      pop\n        /* \"#utility.yul\":543:546   */\n      dup4\n        /* \"#utility.yul\":536:540   */\n      0x20\n        /* \"#utility.yul\":526:532   */\n      dup3\n        /* \"#utility.yul\":523:524   */\n      0x05\n        /* \"#utility.yul\":519:533   */\n      shl\n        /* \"#utility.yul\":511:517   */\n      dup6\n        /* \"#utility.yul\":507:534   */\n      add\n        /* \"#utility.yul\":503:541   */\n      add\n        /* \"#utility.yul\":500:547   */\n      gt\n        /* \"#utility.yul\":497:564   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":560:561   */\n      0x00\n        /* \"#utility.yul\":557:558   */\n      0x00\n        /* \"#utility.yul\":550:562   */\n      revert\n        /* \"#utility.yul\":497:564   */\n    tag_218:\n        /* \"#utility.yul\":203:570   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":575:1672   */\n    tag_28:\n        /* \"#utility.yul\":731:737   */\n      0x00\n        /* \"#utility.yul\":739:745   */\n      0x00\n        /* \"#utility.yul\":747:753   */\n      0x00\n        /* \"#utility.yul\":755:761   */\n      0x00\n        /* \"#utility.yul\":763:769   */\n      0x00\n        /* \"#utility.yul\":771:777   */\n      0x00\n        /* \"#utility.yul\":824:826   */\n      0x60\n        /* \"#utility.yul\":812:821   */\n      dup8\n        /* \"#utility.yul\":803:810   */\n      dup10\n        /* \"#utility.yul\":799:822   */\n      sub\n        /* \"#utility.yul\":795:827   */\n      slt\n        /* \"#utility.yul\":792:844   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":837:838   */\n      0x00\n        /* \"#utility.yul\":830:842   */\n      revert\n        /* \"#utility.yul\":792:844   */\n    tag_220:\n        /* \"#utility.yul\":880:889   */\n      dup7\n        /* \"#utility.yul\":867:890   */\n      calldataload\n        /* \"#utility.yul\":913:931   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":905:911   */\n      dup2\n        /* \"#utility.yul\":902:932   */\n      gt\n        /* \"#utility.yul\":899:949   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":945:946   */\n      0x00\n        /* \"#utility.yul\":942:943   */\n      0x00\n        /* \"#utility.yul\":935:947   */\n      revert\n        /* \"#utility.yul\":899:949   */\n    tag_221:\n        /* \"#utility.yul\":984:1054   */\n      tag_222\n        /* \"#utility.yul\":1046:1053   */\n      dup10\n        /* \"#utility.yul\":1037:1043   */\n      dup3\n        /* \"#utility.yul\":1026:1035   */\n      dup11\n        /* \"#utility.yul\":1022:1044   */\n      add\n        /* \"#utility.yul\":984:1054   */\n      tag_210\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1073:1081   */\n      swap1\n      swap8\n      pop\n        /* \"#utility.yul\":958:1054   */\n      swap6\n      pop\n      pop\n        /* \"#utility.yul\":1161:1163   */\n      0x20\n        /* \"#utility.yul\":1146:1164   */\n      dup8\n      add\n        /* \"#utility.yul\":1133:1165   */\n      calldataload\n        /* \"#utility.yul\":1190:1208   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1177:1209   */\n      dup2\n      gt\n        /* \"#utility.yul\":1174:1226   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1222:1223   */\n      0x00\n        /* \"#utility.yul\":1219:1220   */\n      0x00\n        /* \"#utility.yul\":1212:1224   */\n      revert\n        /* \"#utility.yul\":1174:1226   */\n    tag_223:\n        /* \"#utility.yul\":1261:1333   */\n      tag_224\n        /* \"#utility.yul\":1325:1332   */\n      dup10\n        /* \"#utility.yul\":1314:1322   */\n      dup3\n        /* \"#utility.yul\":1303:1312   */\n      dup11\n        /* \"#utility.yul\":1299:1323   */\n      add\n        /* \"#utility.yul\":1261:1333   */\n      tag_210\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1352:1360   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":1235:1333   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":1440:1442   */\n      0x40\n        /* \"#utility.yul\":1425:1443   */\n      dup8\n      add\n        /* \"#utility.yul\":1412:1444   */\n      calldataload\n        /* \"#utility.yul\":1469:1487   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1456:1488   */\n      dup2\n      gt\n        /* \"#utility.yul\":1453:1505   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":1501:1502   */\n      0x00\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1491:1503   */\n      revert\n        /* \"#utility.yul\":1453:1505   */\n    tag_225:\n        /* \"#utility.yul\":1540:1612   */\n      tag_226\n        /* \"#utility.yul\":1604:1611   */\n      dup10\n        /* \"#utility.yul\":1593:1601   */\n      dup3\n        /* \"#utility.yul\":1582:1591   */\n      dup11\n        /* \"#utility.yul\":1578:1602   */\n      add\n        /* \"#utility.yul\":1540:1612   */\n      tag_210\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":575:1672   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":1631:1639   */\n      swap4\n      swap5\n        /* \"#utility.yul\":575:1672   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1850   */\n    tag_211:\n        /* \"#utility.yul\":1745:1765   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1794:1825   */\n      dup2\n      and\n        /* \"#utility.yul\":1784:1826   */\n      dup2\n      eq\n        /* \"#utility.yul\":1774:1844   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":1840:1841   */\n      0x00\n        /* \"#utility.yul\":1837:1838   */\n      0x00\n        /* \"#utility.yul\":1830:1842   */\n      revert\n        /* \"#utility.yul\":1855:2011   */\n    tag_212:\n        /* \"#utility.yul\":1921:1941   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1981:1985   */\n      0xff\n        /* \"#utility.yul\":1970:1986   */\n      dup2\n      and\n        /* \"#utility.yul\":1960:1987   */\n      dup2\n      eq\n        /* \"#utility.yul\":1950:2005   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2001:2002   */\n      0x00\n        /* \"#utility.yul\":1998:1999   */\n      0x00\n        /* \"#utility.yul\":1991:2003   */\n      revert\n        /* \"#utility.yul\":2016:2340   */\n    tag_32:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2099:2105   */\n      0x00\n        /* \"#utility.yul\":2107:2113   */\n      0x00\n        /* \"#utility.yul\":2160:2162   */\n      0x60\n        /* \"#utility.yul\":2148:2157   */\n      dup5\n        /* \"#utility.yul\":2139:2146   */\n      dup7\n        /* \"#utility.yul\":2135:2158   */\n      sub\n        /* \"#utility.yul\":2131:2163   */\n      slt\n        /* \"#utility.yul\":2128:2180   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2176:2177   */\n      0x00\n        /* \"#utility.yul\":2173:2174   */\n      0x00\n        /* \"#utility.yul\":2166:2178   */\n      revert\n        /* \"#utility.yul\":2128:2180   */\n    tag_232:\n        /* \"#utility.yul\":2199:2228   */\n      tag_233\n        /* \"#utility.yul\":2218:2227   */\n      dup5\n        /* \"#utility.yul\":2199:2228   */\n      tag_211\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2189:2228   */\n      swap3\n      pop\n        /* \"#utility.yul\":2275:2277   */\n      0x20\n        /* \"#utility.yul\":2264:2273   */\n      dup5\n        /* \"#utility.yul\":2260:2278   */\n      add\n        /* \"#utility.yul\":2247:2279   */\n      calldataload\n        /* \"#utility.yul\":2237:2279   */\n      swap2\n      pop\n        /* \"#utility.yul\":2298:2334   */\n      tag_234\n        /* \"#utility.yul\":2330:2332   */\n      0x40\n        /* \"#utility.yul\":2319:2328   */\n      dup6\n        /* \"#utility.yul\":2315:2333   */\n      add\n        /* \"#utility.yul\":2298:2334   */\n      tag_212\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2288:2334   */\n      swap1\n      pop\n        /* \"#utility.yul\":2016:2340   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2966:3148   */\n    tag_69:\n        /* \"#utility.yul\":3023:3029   */\n      0x00\n        /* \"#utility.yul\":3076:3078   */\n      0x20\n        /* \"#utility.yul\":3064:3073   */\n      dup3\n        /* \"#utility.yul\":3055:3062   */\n      dup5\n        /* \"#utility.yul\":3051:3074   */\n      sub\n        /* \"#utility.yul\":3047:3079   */\n      slt\n        /* \"#utility.yul\":3044:3096   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":3092:3093   */\n      0x00\n        /* \"#utility.yul\":3089:3090   */\n      0x00\n        /* \"#utility.yul\":3082:3094   */\n      revert\n        /* \"#utility.yul\":3044:3096   */\n    tag_239:\n        /* \"#utility.yul\":3115:3142   */\n      tag_240\n        /* \"#utility.yul\":3132:3141   */\n      dup3\n        /* \"#utility.yul\":3115:3142   */\n      tag_212\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3105:3142   */\n      swap4\n        /* \"#utility.yul\":2966:3148   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3153:3339   */\n    tag_74:\n        /* \"#utility.yul\":3212:3218   */\n      0x00\n        /* \"#utility.yul\":3265:3267   */\n      0x20\n        /* \"#utility.yul\":3253:3262   */\n      dup3\n        /* \"#utility.yul\":3244:3251   */\n      dup5\n        /* \"#utility.yul\":3240:3263   */\n      sub\n        /* \"#utility.yul\":3236:3268   */\n      slt\n        /* \"#utility.yul\":3233:3285   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":3281:3282   */\n      0x00\n        /* \"#utility.yul\":3278:3279   */\n      0x00\n        /* \"#utility.yul\":3271:3283   */\n      revert\n        /* \"#utility.yul\":3233:3285   */\n    tag_242:\n        /* \"#utility.yul\":3304:3333   */\n      tag_240\n        /* \"#utility.yul\":3323:3332   */\n      dup3\n        /* \"#utility.yul\":3304:3333   */\n      tag_211\n      jump\t// in\n        /* \"#utility.yul\":3747:3874   */\n    tag_96:\n        /* \"#utility.yul\":3808:3818   */\n      0x4e487b71\n        /* \"#utility.yul\":3803:3806   */\n      0xe0\n        /* \"#utility.yul\":3799:3819   */\n      shl\n        /* \"#utility.yul\":3796:3797   */\n      0x00\n        /* \"#utility.yul\":3789:3820   */\n      mstore\n        /* \"#utility.yul\":3839:3843   */\n      0x32\n        /* \"#utility.yul\":3836:3837   */\n      0x04\n        /* \"#utility.yul\":3829:3844   */\n      mstore\n        /* \"#utility.yul\":3863:3867   */\n      0x24\n        /* \"#utility.yul\":3860:3861   */\n      0x00\n        /* \"#utility.yul\":3853:3868   */\n      revert\n        /* \"#utility.yul\":4530:4714   */\n    tag_117:\n        /* \"#utility.yul\":4600:4606   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4641:4650   */\n      dup3\n        /* \"#utility.yul\":4632:4639   */\n      dup5\n        /* \"#utility.yul\":4628:4651   */\n      sub\n        /* \"#utility.yul\":4624:4656   */\n      slt\n        /* \"#utility.yul\":4621:4673   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":4669:4670   */\n      0x00\n        /* \"#utility.yul\":4666:4667   */\n      0x00\n        /* \"#utility.yul\":4659:4671   */\n      revert\n        /* \"#utility.yul\":4621:4673   */\n    tag_249:\n      pop\n        /* \"#utility.yul\":4692:4708   */\n      mload\n      swap2\n        /* \"#utility.yul\":4530:4714   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4719:5121   */\n    tag_120:\n        /* \"#utility.yul\":4921:4923   */\n      0x20\n        /* \"#utility.yul\":4903:4924   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4960:4962   */\n      0x26\n        /* \"#utility.yul\":4940:4958   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4933:4963   */\n      mstore\n        /* \"#utility.yul\":4999:5033   */\n      0x496e73756666696369656e74205553444320616c6c6f77616e636520666f7220\n        /* \"#utility.yul\":4994:4996   */\n      0x40\n        /* \"#utility.yul\":4979:4997   */\n      dup3\n      add\n        /* \"#utility.yul\":4972:5034   */\n      mstore\n      shl(0xd1, 0x3937baba32b9)\n        /* \"#utility.yul\":5065:5067   */\n      0x60\n        /* \"#utility.yul\":5050:5068   */\n      dup3\n      add\n        /* \"#utility.yul\":5043:5079   */\n      mstore\n        /* \"#utility.yul\":5111:5114   */\n      0x80\n        /* \"#utility.yul\":5096:5115   */\n      add\n      swap1\n        /* \"#utility.yul\":4719:5121   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122002ddb94308cf22b12af03e2c8cf8cf912c6f66af862498651996981630a046bf64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_154": {
									"entryPoint": null,
									"id": 154,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_250": {
									"entryPoint": 124,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:699:1",
										"nodeType": "YulBlock",
										"src": "0:699:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:1",
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nativeSrc": "84:22:1",
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nativeSrc": "93:13:1",
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:1",
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:1",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:1",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nativeSrc": "171:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nativeSrc": "171:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:1",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:1",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nativeSrc": "150:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:1",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nativeSrc": "146:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nativeSrc": "135:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nativeSrc": "125:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nativeSrc": "118:50:1",
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nativeSrc": "115:70:1",
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:1",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:1",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "294:195:1",
													"nodeType": "YulBlock",
													"src": "294:195:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:1",
																"nodeType": "YulBlock",
																"src": "340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:1",
																					"nodeType": "YulLiteral",
																					"src": "349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:1",
																					"nodeType": "YulLiteral",
																					"src": "352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:1"
																			},
																			"nativeSrc": "342:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:1"
																		},
																		"nativeSrc": "342:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nativeSrc": "311:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:1",
																		"nodeType": "YulLiteral",
																		"src": "336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nativeSrc": "307:32:1",
																"nodeType": "YulFunctionCall",
																"src": "307:32:1"
															},
															"nativeSrc": "304:52:1",
															"nodeType": "YulIf",
															"src": "304:52:1"
														},
														{
															"nativeSrc": "365:50:1",
															"nodeType": "YulAssignment",
															"src": "365:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:1"
																},
																"nativeSrc": "375:40:1",
																"nodeType": "YulFunctionCall",
																"src": "375:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:1"
																}
															]
														},
														{
															"nativeSrc": "424:59:1",
															"nodeType": "YulAssignment",
															"src": "424:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:1",
																				"nodeType": "YulLiteral",
																				"src": "479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:1"
																		},
																		"nativeSrc": "464:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:1"
																},
																"nativeSrc": "434:49:1",
																"nodeType": "YulFunctionCall",
																"src": "434:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:1",
														"nodeType": "YulTypedName",
														"src": "252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:1",
														"nodeType": "YulTypedName",
														"src": "263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:1",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:1",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "196:293:1"
											},
											{
												"body": {
													"nativeSrc": "595:102:1",
													"nodeType": "YulBlock",
													"src": "595:102:1",
													"statements": [
														{
															"nativeSrc": "605:26:1",
															"nodeType": "YulAssignment",
															"src": "605:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:1",
																		"nodeType": "YulLiteral",
																		"src": "628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:1"
																},
																"nativeSrc": "613:18:1",
																"nodeType": "YulFunctionCall",
																"src": "613:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:1",
																								"nodeType": "YulLiteral",
																								"src": "678:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:1",
																								"nodeType": "YulLiteral",
																								"src": "683:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:1"
																						},
																						"nativeSrc": "674:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:1",
																						"nodeType": "YulLiteral",
																						"src": "687:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:1"
																				},
																				"nativeSrc": "670:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:1"
																		},
																		"nativeSrc": "658:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:1"
																},
																"nativeSrc": "640:51:1",
																"nodeType": "YulFunctionCall",
																"src": "640:51:1"
															},
															"nativeSrc": "640:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:1",
														"nodeType": "YulTypedName",
														"src": "564:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:1",
														"nodeType": "YulTypedName",
														"src": "586:4:1",
														"type": ""
													}
												],
												"src": "494:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051610c8a380380610c8a83398101604081905261002e916100e6565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161007c565b5050600180556001600160a01b0316608052610117565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e1575f5ffd5b919050565b5f5f604083850312156100f7575f5ffd5b610100836100cb565b915061010e602084016100cb565b90509250929050565b608051610b4d61013d5f395f818161014a015281816103e801526105f50152610b4d5ff3fe608060405234801561000f575f5ffd5b50600436106100fb575f3560e01c8063612e3146116100935780639f1f61a0116100635780639f1f61a014610204578063a4518efb1461021f578063cac73ed71461023a578063f2fde38b1461024d575f5ffd5b8063612e3146146101ca578063715018a6146101e45780638456cb59146101ec5780638da5cb5b146101f4575f5ffd5b80633f4ba83a116100ce5780633f4ba83a1461018457806348fcdc7b1461018c57806357df19e6146101945780635c975abb146101ae575f5ffd5b806318c786af146100ff5780631e8bcca51461011d5780632b15e47c146101325780633e413bee14610145575b5f5ffd5b6101065f81565b60405160ff90911681526020015b60405180910390f35b61013061012b36600461096f565b610260565b005b610130610140366004610a34565b61056e565b61016c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b6101306106da565b610106600181565b736131b5fae19ea4f9d964eac0408e4408b66337b561016c565b5f54600160a01b900460ff166040519015158152602001610114565b736352a56caadc4f1e25cd6c75970fa768a3304e6461016c565b6101306106ec565b6101306106fd565b5f546001600160a01b031661016c565b61016c736131b5fae19ea4f9d964eac0408e4408b66337b581565b61016c736352a56caadc4f1e25cd6c75970fa768a3304e6481565b61016c610248366004610a6d565b61070d565b61013061025b366004610a8d565b61075c565b610268610799565b6102706107c5565b6102786107ef565b848314801561028657508481145b8015610293575060648511155b6102ef5760405162461bcd60e51b815260206004820152602260248201527f4172726179206c656e677468206d69736d61746368206f7220746f6f206c6172604482015261676560f01b60648201526084015b60405180910390fd5b5f5b8581101561055c575f8084848481811061030d5761030d610aa6565b90506020020160208101906103229190610a6d565b60ff16036103455750736352a56caadc4f1e25cd6c75970fa768a3304e646103cd565b600184848481811061035957610359610aa6565b905060200201602081019061036e9190610a6d565b60ff16036103915750736131b5fae19ea4f9d964eac0408e4408b66337b56103cd565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9bdd5d195c881251607a1b60448201526064016102e6565b8585838181106103df576103df610aa6565b905060200201357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dd62ed3e8a8a8681811061042757610427610aa6565b905060200201602081019061043c9190610a8d565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529085166024820152604401602060405180830381865afa158015610486573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104aa9190610aba565b10156104c85760405162461bcd60e51b81526004016102e690610ad1565b806001600160a01b03168888848181106104e4576104e4610aa6565b90506020020160208101906104f99190610a8d565b6001600160a01b03167feab9cd112c05d2451f24acf7702297c9705b2115923d562c663c5272a60fe76f88888681811061053557610535610aa6565b9050602002013560405161054b91815260200190565b60405180910390a3506001016102f1565b5061056660018055565b505050505050565b610576610799565b61057e6107c5565b6105866107ef565b5f60ff82166105aa5750736352a56caadc4f1e25cd6c75970fa768a3304e646105cc565b5f1960ff8316016103915750736131b5fae19ea4f9d964eac0408e4408b66337b55b604051636eb1769f60e11b81526001600160a01b038581166004830152828116602483015284917f00000000000000000000000000000000000000000000000000000000000000009091169063dd62ed3e90604401602060405180830381865afa15801561063c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106609190610aba565b101561067e5760405162461bcd60e51b81526004016102e690610ad1565b806001600160a01b0316846001600160a01b03167feab9cd112c05d2451f24acf7702297c9705b2115923d562c663c5272a60fe76f856040516106c391815260200190565b60405180910390a3506106d560018055565b505050565b6106e2610799565b6106ea610819565b565b6106f4610799565b6106ea5f61086d565b610705610799565b6106ea6108bc565b5f60ff82166107315750736352a56caadc4f1e25cd6c75970fa768a3304e64919050565b5f1960ff8316016103915750736131b5fae19ea4f9d964eac0408e4408b66337b5919050565b919050565b610764610799565b6001600160a01b03811661078d57604051631e4fbdf760e01b81525f60048201526024016102e6565b6107968161086d565b50565b5f546001600160a01b031633146106ea5760405163118cdaa760e01b81523360048201526024016102e6565b5f54600160a01b900460ff16156106ea5760405163d93c066560e01b815260040160405180910390fd5b60026001540361081257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6108216108fe565b5f805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108c46107c5565b5f805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108503390565b5f54600160a01b900460ff166106ea57604051638dfc202b60e01b815260040160405180910390fd5b5f5f83601f840112610937575f5ffd5b50813567ffffffffffffffff81111561094e575f5ffd5b6020830191508360208260051b8501011115610968575f5ffd5b9250929050565b5f5f5f5f5f5f60608789031215610984575f5ffd5b863567ffffffffffffffff81111561099a575f5ffd5b6109a689828a01610927565b909750955050602087013567ffffffffffffffff8111156109c5575f5ffd5b6109d189828a01610927565b909550935050604087013567ffffffffffffffff8111156109f0575f5ffd5b6109fc89828a01610927565b979a9699509497509295939492505050565b80356001600160a01b0381168114610757575f5ffd5b803560ff81168114610757575f5ffd5b5f5f5f60608486031215610a46575f5ffd5b610a4f84610a0e565b925060208401359150610a6460408501610a24565b90509250925092565b5f60208284031215610a7d575f5ffd5b610a8682610a24565b9392505050565b5f60208284031215610a9d575f5ffd5b610a8682610a0e565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610aca575f5ffd5b5051919050565b60208082526026908201527f496e73756666696369656e74205553444320616c6c6f77616e636520666f72206040820152653937baba32b960d11b60608201526080019056fea264697066735822122002ddb94308cf22b12af03e2c8cf8cf912c6f66af862498651996981630a046bf64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC8A CODESIZE SUB DUP1 PUSH2 0xC8A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xE6 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x7C JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x117 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x100 DUP4 PUSH2 0xCB JUMP JUMPDEST SWAP2 POP PUSH2 0x10E PUSH1 0x20 DUP5 ADD PUSH2 0xCB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xB4D PUSH2 0x13D PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x14A ADD MSTORE DUP2 DUP2 PUSH2 0x3E8 ADD MSTORE PUSH2 0x5F5 ADD MSTORE PUSH2 0xB4D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x612E3146 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0x9F1F61A0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x9F1F61A0 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA4518EFB EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xCAC73ED7 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x612E3146 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x48FCDC7B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x57DF19E6 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18C786AF EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x1E8BCCA5 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x2B15E47C EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x106 PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x96F JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH2 0x16C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x106 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 PUSH2 0x16C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 PUSH2 0x16C JUMP JUMPDEST PUSH2 0x130 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0x130 PUSH2 0x6FD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16C JUMP JUMPDEST PUSH2 0x16C PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 DUP2 JUMP JUMPDEST PUSH2 0x16C PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 DUP2 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH2 0x130 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH2 0x268 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x270 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x7EF JUMP JUMPDEST DUP5 DUP4 EQ DUP1 ISZERO PUSH2 0x286 JUMPI POP DUP5 DUP2 EQ JUMPDEST DUP1 ISZERO PUSH2 0x293 JUMPI POP PUSH1 0x64 DUP6 GT ISZERO JUMPDEST PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E677468206D69736D61746368206F7220746F6F206C6172 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6765 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x55C JUMPI PUSH0 DUP1 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x30D JUMPI PUSH2 0x30D PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0xFF AND SUB PUSH2 0x345 JUMPI POP PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x1 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x359 JUMPI PUSH2 0x359 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0xFF AND SUB PUSH2 0x391 JUMPI POP PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9BDD5D195C881251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x3DF JUMPI PUSH2 0x3DF PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD62ED3E DUP11 DUP11 DUP7 DUP2 DUP2 LT PUSH2 0x427 JUMPI PUSH2 0x427 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x486 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0xABA JUMP JUMPDEST LT ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x4E4 JUMPI PUSH2 0x4E4 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEAB9CD112C05D2451F24ACF7702297C9705B2115923D562C663C5272A60FE76F DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x535 JUMPI PUSH2 0x535 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD PUSH2 0x2F1 JUMP JUMPDEST POP PUSH2 0x566 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x576 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x57E PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x586 PUSH2 0x7EF JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH2 0x5AA JUMPI POP PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 PUSH2 0x5CC JUMP JUMPDEST PUSH0 NOT PUSH1 0xFF DUP4 AND ADD PUSH2 0x391 JUMPI POP PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0xABA JUMP JUMPDEST LT ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEAB9CD112C05D2451F24ACF7702297C9705B2115923D562C663C5272A60FE76F DUP6 PUSH1 0x40 MLOAD PUSH2 0x6C3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x6D5 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6E2 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0x819 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6F4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x6EA PUSH0 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x705 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0x8BC JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH2 0x731 JUMPI POP PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 NOT PUSH1 0xFF DUP4 AND ADD PUSH2 0x391 JUMPI POP PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x764 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x78D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x796 DUP2 PUSH2 0x86D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x821 PUSH2 0x8FE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8C4 PUSH2 0x7C5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x850 CALLER SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x937 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x968 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x984 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9A6 DUP10 DUP3 DUP11 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D1 DUP10 DUP3 DUP11 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9FC DUP10 DUP3 DUP11 ADD PUSH2 0x927 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x757 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x757 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA46 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA4F DUP5 PUSH2 0xA0E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0xA64 PUSH1 0x40 DUP6 ADD PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA86 DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA86 DUP3 PUSH2 0xA0E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xACA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205553444320616C6C6F77616E636520666F7220 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3937BABA32B9 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDD 0xB9 NUMBER ADDMOD 0xCF 0x22 0xB1 0x2A CREATE RETURNDATACOPY 0x2C DUP13 EXTCALL 0xCF SWAP2 0x2C PUSH16 0x66AF862498651996981630A046BF6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "13428:3762:0:-:0;;;14042:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14099:12;-1:-1:-1;;;;;5043:26:0;;5039:95;;5092:31;;-1:-1:-1;;;5092:31:0;;5120:1;5092:31;;;640:51:1;613:18;;5092:31:0;;;;;;;5039:95;5143:32;5162:12;5143:18;:32::i;:::-;-1:-1:-1;;11442:1:0;11646:21;;-1:-1:-1;;;;;14123:20:0::1;;::::0;13428:3762;;6682:187;6755:16;6774:6;;-1:-1:-1;;;;;6790:17:0;;;-1:-1:-1;;;;;;6790:17:0;;;;;;6822:40;;6774:6;;;;;;;6822:40;;6755:16;6822:40;6745:124;6682:187;:::o;14:177:1:-;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;13428:3762:0;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@KYBERSWAP_ID_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@OPENOCEAN_ID_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_KYBERSWAP_ROUTER_441": {
									"entryPoint": null,
									"id": 441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_OPENOCEAN_ROUTER_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_188": {
									"entryPoint": 1945,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_88": {
									"entryPoint": null,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_404": {
									"entryPoint": 2031,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_339": {
									"entryPoint": 2236,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_310": {
									"entryPoint": 1989,
									"id": 310,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_323": {
									"entryPoint": 2302,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_250": {
									"entryPoint": 2157,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_355": {
									"entryPoint": 2073,
									"id": 355,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approveAutoBuy_532": {
									"entryPoint": 1390,
									"id": 532,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@batchAutoBuy_640": {
									"entryPoint": 608,
									"id": 640,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@getKyberSwapRouter_706": {
									"entryPoint": null,
									"id": 706,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOpenOceanRouter_697": {
									"entryPoint": null,
									"id": 697,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRouterAddress_688": {
									"entryPoint": 1805,
									"id": 688,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_171": {
									"entryPoint": null,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_650": {
									"entryPoint": 1789,
									"id": 650,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_298": {
									"entryPoint": null,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_202": {
									"entryPoint": 1772,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_230": {
									"entryPoint": 1884,
									"id": 230,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_660": {
									"entryPoint": 1754,
									"id": 660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdc_435": {
									"entryPoint": null,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint8": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint8_$dyn_calldata_ptr": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 2669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint8": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5cc9535349ef3cb0374382b4c519eb16b858599e8fbee45a596ae6be2dfb8071__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a35d06fca48b021114d2c65fb939eba459fd0b080c02f0562ca71c99a2bc26f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac9fabd74d76a63a39b146ddb74306ea1bdd99f9597697ee4ca262297a287ce7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5305:1",
										"nodeType": "YulBlock",
										"src": "0:5305:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "111:87:1",
													"nodeType": "YulBlock",
													"src": "111:87:1",
													"statements": [
														{
															"nativeSrc": "121:26:1",
															"nodeType": "YulAssignment",
															"src": "121:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "133:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "133:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "144:2:1",
																		"nodeType": "YulLiteral",
																		"src": "144:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "129:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "129:3:1"
																},
																"nativeSrc": "129:18:1",
																"nodeType": "YulFunctionCall",
																"src": "129:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "121:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "121:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "163:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "163:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "178:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "178:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "186:4:1",
																				"nodeType": "YulLiteral",
																				"src": "186:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "174:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "174:3:1"
																		},
																		"nativeSrc": "174:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "174:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "156:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "156:6:1"
																},
																"nativeSrc": "156:36:1",
																"nodeType": "YulFunctionCall",
																"src": "156:36:1"
															},
															"nativeSrc": "156:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "156:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "14:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "80:9:1",
														"nodeType": "YulTypedName",
														"src": "80:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "91:6:1",
														"nodeType": "YulTypedName",
														"src": "91:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "102:4:1",
														"nodeType": "YulTypedName",
														"src": "102:4:1",
														"type": ""
													}
												],
												"src": "14:184:1"
											},
											{
												"body": {
													"nativeSrc": "287:283:1",
													"nodeType": "YulBlock",
													"src": "287:283:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "336:16:1",
																"nodeType": "YulBlock",
																"src": "336:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "345:1:1",
																					"nodeType": "YulLiteral",
																					"src": "345:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "348:1:1",
																					"nodeType": "YulLiteral",
																					"src": "348:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "338:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "338:6:1"
																			},
																			"nativeSrc": "338:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "338:12:1"
																		},
																		"nativeSrc": "338:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "338:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "315:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "315:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "323:4:1",
																						"nodeType": "YulLiteral",
																						"src": "323:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "311:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "311:3:1"
																				},
																				"nativeSrc": "311:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "311:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "330:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "330:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "307:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "307:3:1"
																		},
																		"nativeSrc": "307:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "307:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "300:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "300:6:1"
																},
																"nativeSrc": "300:35:1",
																"nodeType": "YulFunctionCall",
																"src": "300:35:1"
															},
															"nativeSrc": "297:55:1",
															"nodeType": "YulIf",
															"src": "297:55:1"
														},
														{
															"nativeSrc": "361:30:1",
															"nodeType": "YulAssignment",
															"src": "361:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "384:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "384:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "371:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "371:12:1"
																},
																"nativeSrc": "371:20:1",
																"nodeType": "YulFunctionCall",
																"src": "371:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "361:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "361:6:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "434:16:1",
																"nodeType": "YulBlock",
																"src": "434:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "443:1:1",
																					"nodeType": "YulLiteral",
																					"src": "443:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "446:1:1",
																					"nodeType": "YulLiteral",
																					"src": "446:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "436:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "436:6:1"
																			},
																			"nativeSrc": "436:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "436:12:1"
																		},
																		"nativeSrc": "436:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "436:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "406:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "406:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "414:18:1",
																		"nodeType": "YulLiteral",
																		"src": "414:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "403:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "403:2:1"
																},
																"nativeSrc": "403:30:1",
																"nodeType": "YulFunctionCall",
																"src": "403:30:1"
															},
															"nativeSrc": "400:50:1",
															"nodeType": "YulIf",
															"src": "400:50:1"
														},
														{
															"nativeSrc": "459:29:1",
															"nodeType": "YulAssignment",
															"src": "459:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "475:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:4:1",
																		"nodeType": "YulLiteral",
																		"src": "483:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "471:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:1"
																},
																"nativeSrc": "471:17:1",
																"nodeType": "YulFunctionCall",
																"src": "471:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "459:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "459:8:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "548:16:1",
																"nodeType": "YulBlock",
																"src": "548:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "557:1:1",
																					"nodeType": "YulLiteral",
																					"src": "557:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "560:1:1",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "550:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "550:6:1"
																			},
																			"nativeSrc": "550:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "550:12:1"
																		},
																		"nativeSrc": "550:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "550:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "511:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "511:6:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "523:1:1",
																								"nodeType": "YulLiteral",
																								"src": "523:1:1",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "526:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "526:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "519:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "519:3:1"
																						},
																						"nativeSrc": "519:14:1",
																						"nodeType": "YulFunctionCall",
																						"src": "519:14:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "507:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "507:3:1"
																				},
																				"nativeSrc": "507:27:1",
																				"nodeType": "YulFunctionCall",
																				"src": "507:27:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "536:4:1",
																				"nodeType": "YulLiteral",
																				"src": "536:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "503:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "503:3:1"
																		},
																		"nativeSrc": "503:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "503:38:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "543:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "543:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "500:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:2:1"
																},
																"nativeSrc": "500:47:1",
																"nodeType": "YulFunctionCall",
																"src": "500:47:1"
															},
															"nativeSrc": "497:67:1",
															"nodeType": "YulIf",
															"src": "497:67:1"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nativeSrc": "203:367:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "250:6:1",
														"nodeType": "YulTypedName",
														"src": "250:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "258:3:1",
														"nodeType": "YulTypedName",
														"src": "258:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "266:8:1",
														"nodeType": "YulTypedName",
														"src": "266:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "276:6:1",
														"nodeType": "YulTypedName",
														"src": "276:6:1",
														"type": ""
													}
												],
												"src": "203:367:1"
											},
											{
												"body": {
													"nativeSrc": "782:890:1",
													"nodeType": "YulBlock",
													"src": "782:890:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "828:16:1",
																"nodeType": "YulBlock",
																"src": "828:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "837:1:1",
																					"nodeType": "YulLiteral",
																					"src": "837:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "840:1:1",
																					"nodeType": "YulLiteral",
																					"src": "840:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "830:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:6:1"
																			},
																			"nativeSrc": "830:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "830:12:1"
																		},
																		"nativeSrc": "830:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "830:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "803:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "803:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "812:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:1"
																		},
																		"nativeSrc": "799:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "799:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "824:2:1",
																		"nodeType": "YulLiteral",
																		"src": "824:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "795:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:1"
																},
																"nativeSrc": "795:32:1",
																"nodeType": "YulFunctionCall",
																"src": "795:32:1"
															},
															"nativeSrc": "792:52:1",
															"nodeType": "YulIf",
															"src": "792:52:1"
														},
														{
															"nativeSrc": "853:37:1",
															"nodeType": "YulVariableDeclaration",
															"src": "853:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "880:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "880:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "867:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "867:12:1"
																},
																"nativeSrc": "867:23:1",
																"nodeType": "YulFunctionCall",
																"src": "867:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "857:6:1",
																	"nodeType": "YulTypedName",
																	"src": "857:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "933:16:1",
																"nodeType": "YulBlock",
																"src": "933:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "942:1:1",
																					"nodeType": "YulLiteral",
																					"src": "942:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:1:1",
																					"nodeType": "YulLiteral",
																					"src": "945:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "935:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "935:6:1"
																			},
																			"nativeSrc": "935:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "935:12:1"
																		},
																		"nativeSrc": "935:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "935:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "905:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "913:18:1",
																		"nodeType": "YulLiteral",
																		"src": "913:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "902:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "902:2:1"
																},
																"nativeSrc": "902:30:1",
																"nodeType": "YulFunctionCall",
																"src": "902:30:1"
															},
															"nativeSrc": "899:50:1",
															"nodeType": "YulIf",
															"src": "899:50:1"
														},
														{
															"nativeSrc": "958:96:1",
															"nodeType": "YulVariableDeclaration",
															"src": "958:96:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1026:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1026:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1037:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1037:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1022:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1022:3:1"
																		},
																		"nativeSrc": "1022:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1022:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1046:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "984:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "984:37:1"
																},
																"nativeSrc": "984:70:1",
																"nodeType": "YulFunctionCall",
																"src": "984:70:1"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "962:8:1",
																	"nodeType": "YulTypedName",
																	"src": "962:8:1",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "972:8:1",
																	"nodeType": "YulTypedName",
																	"src": "972:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1063:18:1",
															"nodeType": "YulAssignment",
															"src": "1063:18:1",
															"value": {
																"name": "value0_1",
																"nativeSrc": "1073:8:1",
																"nodeType": "YulIdentifier",
																"src": "1073:8:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1063:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:1"
																}
															]
														},
														{
															"nativeSrc": "1090:18:1",
															"nodeType": "YulAssignment",
															"src": "1090:18:1",
															"value": {
																"name": "value1_1",
																"nativeSrc": "1100:8:1",
																"nodeType": "YulIdentifier",
																"src": "1100:8:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:1"
																}
															]
														},
														{
															"nativeSrc": "1117:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1117:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1150:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1150:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1161:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1161:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1146:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nativeSrc": "1146:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1146:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1133:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1133:12:1"
																},
																"nativeSrc": "1133:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1133:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1121:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1121:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1210:16:1",
																"nodeType": "YulBlock",
																"src": "1210:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1219:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1219:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1222:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1222:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1212:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1212:6:1"
																			},
																			"nativeSrc": "1212:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1212:12:1"
																		},
																		"nativeSrc": "1212:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1212:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1180:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1180:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1190:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1190:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1177:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1177:2:1"
																},
																"nativeSrc": "1177:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1177:32:1"
															},
															"nativeSrc": "1174:52:1",
															"nodeType": "YulIf",
															"src": "1174:52:1"
														},
														{
															"nativeSrc": "1235:98:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1235:98:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1303:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1303:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1314:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1314:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1299:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1299:3:1"
																		},
																		"nativeSrc": "1299:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1299:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1325:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1325:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "1261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1261:37:1"
																},
																"nativeSrc": "1261:72:1",
																"nodeType": "YulFunctionCall",
																"src": "1261:72:1"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "1239:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1239:8:1",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "1249:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1249:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1342:18:1",
															"nodeType": "YulAssignment",
															"src": "1342:18:1",
															"value": {
																"name": "value2_1",
																"nativeSrc": "1352:8:1",
																"nodeType": "YulIdentifier",
																"src": "1352:8:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																}
															]
														},
														{
															"nativeSrc": "1369:18:1",
															"nodeType": "YulAssignment",
															"src": "1369:18:1",
															"value": {
																"name": "value3_1",
																"nativeSrc": "1379:8:1",
																"nodeType": "YulIdentifier",
																"src": "1379:8:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1369:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1369:6:1"
																}
															]
														},
														{
															"nativeSrc": "1396:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1396:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1429:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1429:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1440:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1440:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1425:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1425:3:1"
																		},
																		"nativeSrc": "1425:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1425:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1412:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:12:1"
																},
																"nativeSrc": "1412:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:32:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "1400:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1400:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1489:16:1",
																"nodeType": "YulBlock",
																"src": "1489:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1498:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1501:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1501:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1491:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:6:1"
																			},
																			"nativeSrc": "1491:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1491:12:1"
																		},
																		"nativeSrc": "1491:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1491:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1469:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1469:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1456:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1456:2:1"
																},
																"nativeSrc": "1456:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1456:32:1"
															},
															"nativeSrc": "1453:52:1",
															"nodeType": "YulIf",
															"src": "1453:52:1"
														},
														{
															"nativeSrc": "1514:98:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1514:98:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1582:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1582:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nativeSrc": "1593:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1593:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1578:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:1"
																		},
																		"nativeSrc": "1578:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1578:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1604:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "1540:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1540:37:1"
																},
																"nativeSrc": "1540:72:1",
																"nodeType": "YulFunctionCall",
																"src": "1540:72:1"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nativeSrc": "1518:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1518:8:1",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nativeSrc": "1528:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1528:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1621:18:1",
															"nodeType": "YulAssignment",
															"src": "1621:18:1",
															"value": {
																"name": "value4_1",
																"nativeSrc": "1631:8:1",
																"nodeType": "YulIdentifier",
																"src": "1631:8:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1621:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1621:6:1"
																}
															]
														},
														{
															"nativeSrc": "1648:18:1",
															"nodeType": "YulAssignment",
															"src": "1648:18:1",
															"value": {
																"name": "value5_1",
																"nativeSrc": "1658:8:1",
																"nodeType": "YulIdentifier",
																"src": "1658:8:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "1648:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1648:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint8_$dyn_calldata_ptr",
												"nativeSrc": "575:1097:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "708:9:1",
														"nodeType": "YulTypedName",
														"src": "708:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "719:7:1",
														"nodeType": "YulTypedName",
														"src": "719:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "731:6:1",
														"nodeType": "YulTypedName",
														"src": "731:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "739:6:1",
														"nodeType": "YulTypedName",
														"src": "739:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "747:6:1",
														"nodeType": "YulTypedName",
														"src": "747:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "755:6:1",
														"nodeType": "YulTypedName",
														"src": "755:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "763:6:1",
														"nodeType": "YulTypedName",
														"src": "763:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "771:6:1",
														"nodeType": "YulTypedName",
														"src": "771:6:1",
														"type": ""
													}
												],
												"src": "575:1097:1"
											},
											{
												"body": {
													"nativeSrc": "1726:124:1",
													"nodeType": "YulBlock",
													"src": "1726:124:1",
													"statements": [
														{
															"nativeSrc": "1736:29:1",
															"nodeType": "YulAssignment",
															"src": "1736:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1758:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1758:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1745:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1745:12:1"
																},
																"nativeSrc": "1745:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1745:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1736:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1736:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1828:16:1",
																"nodeType": "YulBlock",
																"src": "1828:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1837:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1837:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1840:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1840:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1830:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1830:6:1"
																			},
																			"nativeSrc": "1830:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1830:12:1"
																		},
																		"nativeSrc": "1830:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1830:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1787:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1787:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1798:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1798:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1813:3:1",
																										"nodeType": "YulLiteral",
																										"src": "1813:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1818:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1818:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1809:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1809:3:1"
																								},
																								"nativeSrc": "1809:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1809:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1822:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1822:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1805:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1805:3:1"
																						},
																						"nativeSrc": "1805:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1805:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1794:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1794:3:1"
																				},
																				"nativeSrc": "1794:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1794:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1784:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:1"
																		},
																		"nativeSrc": "1784:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1777:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1777:6:1"
																},
																"nativeSrc": "1777:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1777:50:1"
															},
															"nativeSrc": "1774:70:1",
															"nodeType": "YulIf",
															"src": "1774:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1677:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1705:6:1",
														"nodeType": "YulTypedName",
														"src": "1705:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1716:5:1",
														"nodeType": "YulTypedName",
														"src": "1716:5:1",
														"type": ""
													}
												],
												"src": "1677:173:1"
											},
											{
												"body": {
													"nativeSrc": "1902:109:1",
													"nodeType": "YulBlock",
													"src": "1902:109:1",
													"statements": [
														{
															"nativeSrc": "1912:29:1",
															"nodeType": "YulAssignment",
															"src": "1912:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1934:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1934:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1921:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1921:12:1"
																},
																"nativeSrc": "1921:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1921:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1912:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1912:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1989:16:1",
																"nodeType": "YulBlock",
																"src": "1989:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1998:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1998:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2001:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2001:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1991:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1991:6:1"
																			},
																			"nativeSrc": "1991:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1991:12:1"
																		},
																		"nativeSrc": "1991:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1991:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1963:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1963:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1974:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1974:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1981:4:1",
																						"nodeType": "YulLiteral",
																						"src": "1981:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1970:3:1"
																				},
																				"nativeSrc": "1970:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1970:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1960:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1960:2:1"
																		},
																		"nativeSrc": "1960:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1960:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1953:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1953:6:1"
																},
																"nativeSrc": "1953:35:1",
																"nodeType": "YulFunctionCall",
																"src": "1953:35:1"
															},
															"nativeSrc": "1950:55:1",
															"nodeType": "YulIf",
															"src": "1950:55:1"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nativeSrc": "1855:156:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1881:6:1",
														"nodeType": "YulTypedName",
														"src": "1881:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1892:5:1",
														"nodeType": "YulTypedName",
														"src": "1892:5:1",
														"type": ""
													}
												],
												"src": "1855:156:1"
											},
											{
												"body": {
													"nativeSrc": "2118:222:1",
													"nodeType": "YulBlock",
													"src": "2118:222:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2164:16:1",
																"nodeType": "YulBlock",
																"src": "2164:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2173:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2173:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2176:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2176:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2166:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2166:6:1"
																			},
																			"nativeSrc": "2166:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2166:12:1"
																		},
																		"nativeSrc": "2166:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2166:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2139:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2139:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2148:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2148:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2135:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2135:3:1"
																		},
																		"nativeSrc": "2135:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2135:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2160:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2131:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:3:1"
																},
																"nativeSrc": "2131:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2131:32:1"
															},
															"nativeSrc": "2128:52:1",
															"nodeType": "YulIf",
															"src": "2128:52:1"
														},
														{
															"nativeSrc": "2189:39:1",
															"nodeType": "YulAssignment",
															"src": "2189:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2218:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2218:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2199:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2199:18:1"
																},
																"nativeSrc": "2199:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2199:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2189:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2189:6:1"
																}
															]
														},
														{
															"nativeSrc": "2237:42:1",
															"nodeType": "YulAssignment",
															"src": "2237:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2275:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2260:3:1"
																		},
																		"nativeSrc": "2260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2260:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2247:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2247:12:1"
																},
																"nativeSrc": "2247:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2247:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2237:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:1"
																}
															]
														},
														{
															"nativeSrc": "2288:46:1",
															"nodeType": "YulAssignment",
															"src": "2288:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2319:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2330:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2330:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2315:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:1"
																		},
																		"nativeSrc": "2315:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2315:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nativeSrc": "2298:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "2298:16:1"
																},
																"nativeSrc": "2298:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2298:36:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2288:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2288:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint8",
												"nativeSrc": "2016:324:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:1",
														"nodeType": "YulTypedName",
														"src": "2068:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2079:7:1",
														"nodeType": "YulTypedName",
														"src": "2079:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2091:6:1",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2099:6:1",
														"nodeType": "YulTypedName",
														"src": "2099:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2107:6:1",
														"nodeType": "YulTypedName",
														"src": "2107:6:1",
														"type": ""
													}
												],
												"src": "2016:324:1"
											},
											{
												"body": {
													"nativeSrc": "2459:102:1",
													"nodeType": "YulBlock",
													"src": "2459:102:1",
													"statements": [
														{
															"nativeSrc": "2469:26:1",
															"nodeType": "YulAssignment",
															"src": "2469:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2481:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2481:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2492:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2492:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2477:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:1"
																},
																"nativeSrc": "2477:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2477:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2469:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2469:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2511:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2511:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2526:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2526:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2542:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2542:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2547:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2547:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2538:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2538:3:1"
																						},
																						"nativeSrc": "2538:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2538:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2551:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2551:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2534:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2534:3:1"
																				},
																				"nativeSrc": "2534:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2534:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2522:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2522:3:1"
																		},
																		"nativeSrc": "2522:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2522:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2504:6:1"
																},
																"nativeSrc": "2504:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2504:51:1"
															},
															"nativeSrc": "2504:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2504:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "2345:216:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2428:9:1",
														"nodeType": "YulTypedName",
														"src": "2428:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2439:6:1",
														"nodeType": "YulTypedName",
														"src": "2439:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2450:4:1",
														"nodeType": "YulTypedName",
														"src": "2450:4:1",
														"type": ""
													}
												],
												"src": "2345:216:1"
											},
											{
												"body": {
													"nativeSrc": "2667:102:1",
													"nodeType": "YulBlock",
													"src": "2667:102:1",
													"statements": [
														{
															"nativeSrc": "2677:26:1",
															"nodeType": "YulAssignment",
															"src": "2677:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2689:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2700:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2685:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:1"
																},
																"nativeSrc": "2685:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2685:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2677:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2677:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2719:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2719:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2734:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2734:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2750:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2750:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2755:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2755:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2746:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2746:3:1"
																						},
																						"nativeSrc": "2746:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2746:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2759:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2759:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2742:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2742:3:1"
																				},
																				"nativeSrc": "2742:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2742:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2730:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2730:3:1"
																		},
																		"nativeSrc": "2730:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2730:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2712:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2712:6:1"
																},
																"nativeSrc": "2712:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2712:51:1"
															},
															"nativeSrc": "2712:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2712:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2566:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2636:9:1",
														"nodeType": "YulTypedName",
														"src": "2636:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2647:6:1",
														"nodeType": "YulTypedName",
														"src": "2647:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2658:4:1",
														"nodeType": "YulTypedName",
														"src": "2658:4:1",
														"type": ""
													}
												],
												"src": "2566:203:1"
											},
											{
												"body": {
													"nativeSrc": "2869:92:1",
													"nodeType": "YulBlock",
													"src": "2869:92:1",
													"statements": [
														{
															"nativeSrc": "2879:26:1",
															"nodeType": "YulAssignment",
															"src": "2879:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2891:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2891:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2902:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2902:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2887:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:1"
																},
																"nativeSrc": "2887:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2887:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2879:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2879:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2921:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2921:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2946:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2946:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2939:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2939:6:1"
																				},
																				"nativeSrc": "2939:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2939:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2932:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2932:6:1"
																		},
																		"nativeSrc": "2932:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2932:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2914:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2914:6:1"
																},
																"nativeSrc": "2914:41:1",
																"nodeType": "YulFunctionCall",
																"src": "2914:41:1"
															},
															"nativeSrc": "2914:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "2914:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2774:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2838:9:1",
														"nodeType": "YulTypedName",
														"src": "2838:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2849:6:1",
														"nodeType": "YulTypedName",
														"src": "2849:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2860:4:1",
														"nodeType": "YulTypedName",
														"src": "2860:4:1",
														"type": ""
													}
												],
												"src": "2774:187:1"
											},
											{
												"body": {
													"nativeSrc": "3034:114:1",
													"nodeType": "YulBlock",
													"src": "3034:114:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3080:16:1",
																"nodeType": "YulBlock",
																"src": "3080:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3089:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3092:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3092:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3082:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3082:6:1"
																			},
																			"nativeSrc": "3082:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3082:12:1"
																		},
																		"nativeSrc": "3082:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3082:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3055:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3055:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3064:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3064:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3051:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3051:3:1"
																		},
																		"nativeSrc": "3051:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3051:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3076:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3076:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3047:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3047:3:1"
																},
																"nativeSrc": "3047:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3047:32:1"
															},
															"nativeSrc": "3044:52:1",
															"nodeType": "YulIf",
															"src": "3044:52:1"
														},
														{
															"nativeSrc": "3105:37:1",
															"nodeType": "YulAssignment",
															"src": "3105:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3132:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3132:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nativeSrc": "3115:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "3115:16:1"
																},
																"nativeSrc": "3115:27:1",
																"nodeType": "YulFunctionCall",
																"src": "3115:27:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3105:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "2966:182:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3000:9:1",
														"nodeType": "YulTypedName",
														"src": "3000:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3011:7:1",
														"nodeType": "YulTypedName",
														"src": "3011:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3023:6:1",
														"nodeType": "YulTypedName",
														"src": "3023:6:1",
														"type": ""
													}
												],
												"src": "2966:182:1"
											},
											{
												"body": {
													"nativeSrc": "3223:116:1",
													"nodeType": "YulBlock",
													"src": "3223:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3269:16:1",
																"nodeType": "YulBlock",
																"src": "3269:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3278:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3278:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3281:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3281:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3271:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3271:6:1"
																			},
																			"nativeSrc": "3271:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3271:12:1"
																		},
																		"nativeSrc": "3271:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3271:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3244:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3244:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3253:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3253:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3240:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3240:3:1"
																		},
																		"nativeSrc": "3240:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3240:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3265:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3265:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3236:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3236:3:1"
																},
																"nativeSrc": "3236:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3236:32:1"
															},
															"nativeSrc": "3233:52:1",
															"nodeType": "YulIf",
															"src": "3233:52:1"
														},
														{
															"nativeSrc": "3294:39:1",
															"nodeType": "YulAssignment",
															"src": "3294:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3323:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3323:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3304:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3304:18:1"
																},
																"nativeSrc": "3304:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3304:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3294:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3294:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3153:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3189:9:1",
														"nodeType": "YulTypedName",
														"src": "3189:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3200:7:1",
														"nodeType": "YulTypedName",
														"src": "3200:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3212:6:1",
														"nodeType": "YulTypedName",
														"src": "3212:6:1",
														"type": ""
													}
												],
												"src": "3153:186:1"
											},
											{
												"body": {
													"nativeSrc": "3518:224:1",
													"nodeType": "YulBlock",
													"src": "3518:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3535:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3535:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3546:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3546:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3528:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:1"
																},
																"nativeSrc": "3528:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3528:21:1"
															},
															"nativeSrc": "3528:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3528:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3569:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3569:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3580:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3580:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3565:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3565:3:1"
																		},
																		"nativeSrc": "3565:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3565:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3585:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3585:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3558:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:1"
																},
																"nativeSrc": "3558:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3558:30:1"
															},
															"nativeSrc": "3558:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3558:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3608:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3608:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3619:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3619:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3604:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3604:3:1"
																		},
																		"nativeSrc": "3604:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3604:18:1"
																	},
																	{
																		"hexValue": "4172726179206c656e677468206d69736d61746368206f7220746f6f206c6172",
																		"kind": "string",
																		"nativeSrc": "3624:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3624:34:1",
																		"type": "",
																		"value": "Array length mismatch or too lar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3597:6:1"
																},
																"nativeSrc": "3597:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3597:62:1"
															},
															"nativeSrc": "3597:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3597:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3679:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3679:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3690:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3690:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3675:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3675:3:1"
																		},
																		"nativeSrc": "3675:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3675:18:1"
																	},
																	{
																		"hexValue": "6765",
																		"kind": "string",
																		"nativeSrc": "3695:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3695:4:1",
																		"type": "",
																		"value": "ge"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3668:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3668:6:1"
																},
																"nativeSrc": "3668:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3668:32:1"
															},
															"nativeSrc": "3668:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "3668:32:1"
														},
														{
															"nativeSrc": "3709:27:1",
															"nodeType": "YulAssignment",
															"src": "3709:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3721:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3721:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3732:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3732:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3717:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3717:3:1"
																},
																"nativeSrc": "3717:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3717:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3709:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3709:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a35d06fca48b021114d2c65fb939eba459fd0b080c02f0562ca71c99a2bc26f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3344:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3495:9:1",
														"nodeType": "YulTypedName",
														"src": "3495:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3509:4:1",
														"nodeType": "YulTypedName",
														"src": "3509:4:1",
														"type": ""
													}
												],
												"src": "3344:398:1"
											},
											{
												"body": {
													"nativeSrc": "3779:95:1",
													"nodeType": "YulBlock",
													"src": "3779:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3796:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3796:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3803:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3803:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3808:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3808:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:1"
																		},
																		"nativeSrc": "3799:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3799:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3789:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3789:6:1"
																},
																"nativeSrc": "3789:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3789:31:1"
															},
															"nativeSrc": "3789:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3789:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3836:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3836:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3839:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3839:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:1"
																},
																"nativeSrc": "3829:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3829:15:1"
															},
															"nativeSrc": "3829:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3829:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3860:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3860:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3863:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3863:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3853:6:1"
																},
																"nativeSrc": "3853:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3853:15:1"
															},
															"nativeSrc": "3853:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3853:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3747:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3747:127:1"
											},
											{
												"body": {
													"nativeSrc": "4053:167:1",
													"nodeType": "YulBlock",
													"src": "4053:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4070:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4070:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4081:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4081:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4063:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:1"
																},
																"nativeSrc": "4063:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4063:21:1"
															},
															"nativeSrc": "4063:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4063:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4104:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4104:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4115:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4115:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4100:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4100:3:1"
																		},
																		"nativeSrc": "4100:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4100:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4120:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4120:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4093:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4093:6:1"
																},
																"nativeSrc": "4093:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4093:30:1"
															},
															"nativeSrc": "4093:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4093:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4143:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4143:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4154:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4154:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4139:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4139:3:1"
																		},
																		"nativeSrc": "4139:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4139:18:1"
																	},
																	{
																		"hexValue": "496e76616c696420726f75746572204944",
																		"kind": "string",
																		"nativeSrc": "4159:19:1",
																		"nodeType": "YulLiteral",
																		"src": "4159:19:1",
																		"type": "",
																		"value": "Invalid router ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4132:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:1"
																},
																"nativeSrc": "4132:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4132:47:1"
															},
															"nativeSrc": "4132:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4132:47:1"
														},
														{
															"nativeSrc": "4188:26:1",
															"nodeType": "YulAssignment",
															"src": "4188:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4200:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4200:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4211:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4211:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4196:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4196:3:1"
																},
																"nativeSrc": "4196:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4196:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4188:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4188:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac9fabd74d76a63a39b146ddb74306ea1bdd99f9597697ee4ca262297a287ce7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3879:341:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4030:9:1",
														"nodeType": "YulTypedName",
														"src": "4030:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4044:4:1",
														"nodeType": "YulTypedName",
														"src": "4044:4:1",
														"type": ""
													}
												],
												"src": "3879:341:1"
											},
											{
												"body": {
													"nativeSrc": "4354:171:1",
													"nodeType": "YulBlock",
													"src": "4354:171:1",
													"statements": [
														{
															"nativeSrc": "4364:26:1",
															"nodeType": "YulAssignment",
															"src": "4364:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4376:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4376:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4387:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4387:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4372:3:1"
																},
																"nativeSrc": "4372:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4372:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4364:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4406:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4406:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4421:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4421:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4437:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4437:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4442:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4442:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4433:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4433:3:1"
																						},
																						"nativeSrc": "4433:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4433:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4446:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4446:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4429:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4429:3:1"
																				},
																				"nativeSrc": "4429:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4429:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4417:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:1"
																		},
																		"nativeSrc": "4417:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4399:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4399:6:1"
																},
																"nativeSrc": "4399:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4399:51:1"
															},
															"nativeSrc": "4399:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4399:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4470:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4470:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4481:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4481:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4466:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:1"
																		},
																		"nativeSrc": "4466:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4490:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4490:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4506:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4506:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4511:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4511:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4502:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4502:3:1"
																						},
																						"nativeSrc": "4502:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4502:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4515:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4515:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4498:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4498:3:1"
																				},
																				"nativeSrc": "4498:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4498:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4486:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4486:3:1"
																		},
																		"nativeSrc": "4486:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4486:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4459:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4459:6:1"
																},
																"nativeSrc": "4459:60:1",
																"nodeType": "YulFunctionCall",
																"src": "4459:60:1"
															},
															"nativeSrc": "4459:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "4459:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4225:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4315:9:1",
														"nodeType": "YulTypedName",
														"src": "4315:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4326:6:1",
														"nodeType": "YulTypedName",
														"src": "4326:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4334:6:1",
														"nodeType": "YulTypedName",
														"src": "4334:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4345:4:1",
														"nodeType": "YulTypedName",
														"src": "4345:4:1",
														"type": ""
													}
												],
												"src": "4225:300:1"
											},
											{
												"body": {
													"nativeSrc": "4611:103:1",
													"nodeType": "YulBlock",
													"src": "4611:103:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4657:16:1",
																"nodeType": "YulBlock",
																"src": "4657:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4666:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4666:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4669:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4669:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4659:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4659:6:1"
																			},
																			"nativeSrc": "4659:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4659:12:1"
																		},
																		"nativeSrc": "4659:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4659:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4632:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4632:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4641:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4628:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4628:3:1"
																		},
																		"nativeSrc": "4628:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4628:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4624:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4624:3:1"
																},
																"nativeSrc": "4624:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4624:32:1"
															},
															"nativeSrc": "4621:52:1",
															"nodeType": "YulIf",
															"src": "4621:52:1"
														},
														{
															"nativeSrc": "4682:26:1",
															"nodeType": "YulAssignment",
															"src": "4682:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4698:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4692:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:5:1"
																},
																"nativeSrc": "4692:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4692:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4682:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4530:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4577:9:1",
														"nodeType": "YulTypedName",
														"src": "4577:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4588:7:1",
														"nodeType": "YulTypedName",
														"src": "4588:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4600:6:1",
														"nodeType": "YulTypedName",
														"src": "4600:6:1",
														"type": ""
													}
												],
												"src": "4530:184:1"
											},
											{
												"body": {
													"nativeSrc": "4893:228:1",
													"nodeType": "YulBlock",
													"src": "4893:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4910:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4910:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4921:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4921:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4903:6:1"
																},
																"nativeSrc": "4903:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4903:21:1"
															},
															"nativeSrc": "4903:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4903:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4944:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4944:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4955:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4955:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4940:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4940:3:1"
																		},
																		"nativeSrc": "4940:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4940:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4960:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4960:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4933:6:1"
																},
																"nativeSrc": "4933:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4933:30:1"
															},
															"nativeSrc": "4933:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4933:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4983:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4983:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4994:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4994:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4979:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4979:3:1"
																		},
																		"nativeSrc": "4979:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4979:18:1"
																	},
																	{
																		"hexValue": "496e73756666696369656e74205553444320616c6c6f77616e636520666f7220",
																		"kind": "string",
																		"nativeSrc": "4999:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4999:34:1",
																		"type": "",
																		"value": "Insufficient USDC allowance for "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4972:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4972:6:1"
																},
																"nativeSrc": "4972:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4972:62:1"
															},
															"nativeSrc": "4972:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4972:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5065:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:1"
																		},
																		"nativeSrc": "5050:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:18:1"
																	},
																	{
																		"hexValue": "726f75746572",
																		"kind": "string",
																		"nativeSrc": "5070:8:1",
																		"nodeType": "YulLiteral",
																		"src": "5070:8:1",
																		"type": "",
																		"value": "router"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5043:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5043:6:1"
																},
																"nativeSrc": "5043:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5043:36:1"
															},
															"nativeSrc": "5043:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "5043:36:1"
														},
														{
															"nativeSrc": "5088:27:1",
															"nodeType": "YulAssignment",
															"src": "5088:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5100:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5100:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5111:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5111:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5096:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5096:3:1"
																},
																"nativeSrc": "5096:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5096:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5088:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5088:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5cc9535349ef3cb0374382b4c519eb16b858599e8fbee45a596ae6be2dfb8071__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4719:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4870:9:1",
														"nodeType": "YulTypedName",
														"src": "4870:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4884:4:1",
														"nodeType": "YulTypedName",
														"src": "4884:4:1",
														"type": ""
													}
												],
												"src": "4719:402:1"
											},
											{
												"body": {
													"nativeSrc": "5227:76:1",
													"nodeType": "YulBlock",
													"src": "5227:76:1",
													"statements": [
														{
															"nativeSrc": "5237:26:1",
															"nodeType": "YulAssignment",
															"src": "5237:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5249:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5249:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5260:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5245:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5245:3:1"
																},
																"nativeSrc": "5245:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5245:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5237:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5237:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5279:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5279:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5290:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5290:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:1"
																},
																"nativeSrc": "5272:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5272:25:1"
															},
															"nativeSrc": "5272:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5272:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5126:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5196:9:1",
														"nodeType": "YulTypedName",
														"src": "5196:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5207:6:1",
														"nodeType": "YulTypedName",
														"src": "5207:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5218:4:1",
														"nodeType": "YulTypedName",
														"src": "5218:4:1",
														"type": ""
													}
												],
												"src": "5126:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint8_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint8(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_uint8(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a35d06fca48b021114d2c65fb939eba459fd0b080c02f0562ca71c99a2bc26f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Array length mismatch or too lar\")\n        mstore(add(headStart, 96), \"ge\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_ac9fabd74d76a63a39b146ddb74306ea1bdd99f9597697ee4ca262297a287ce7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid router ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_5cc9535349ef3cb0374382b4c519eb16b858599e8fbee45a596ae6be2dfb8071__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Insufficient USDC allowance for \")\n        mstore(add(headStart, 96), \"router\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"435": [
									{
										"length": 32,
										"start": 330
									},
									{
										"length": 32,
										"start": 1000
									},
									{
										"length": 32,
										"start": 1525
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fb575f3560e01c8063612e3146116100935780639f1f61a0116100635780639f1f61a014610204578063a4518efb1461021f578063cac73ed71461023a578063f2fde38b1461024d575f5ffd5b8063612e3146146101ca578063715018a6146101e45780638456cb59146101ec5780638da5cb5b146101f4575f5ffd5b80633f4ba83a116100ce5780633f4ba83a1461018457806348fcdc7b1461018c57806357df19e6146101945780635c975abb146101ae575f5ffd5b806318c786af146100ff5780631e8bcca51461011d5780632b15e47c146101325780633e413bee14610145575b5f5ffd5b6101065f81565b60405160ff90911681526020015b60405180910390f35b61013061012b36600461096f565b610260565b005b610130610140366004610a34565b61056e565b61016c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b6101306106da565b610106600181565b736131b5fae19ea4f9d964eac0408e4408b66337b561016c565b5f54600160a01b900460ff166040519015158152602001610114565b736352a56caadc4f1e25cd6c75970fa768a3304e6461016c565b6101306106ec565b6101306106fd565b5f546001600160a01b031661016c565b61016c736131b5fae19ea4f9d964eac0408e4408b66337b581565b61016c736352a56caadc4f1e25cd6c75970fa768a3304e6481565b61016c610248366004610a6d565b61070d565b61013061025b366004610a8d565b61075c565b610268610799565b6102706107c5565b6102786107ef565b848314801561028657508481145b8015610293575060648511155b6102ef5760405162461bcd60e51b815260206004820152602260248201527f4172726179206c656e677468206d69736d61746368206f7220746f6f206c6172604482015261676560f01b60648201526084015b60405180910390fd5b5f5b8581101561055c575f8084848481811061030d5761030d610aa6565b90506020020160208101906103229190610a6d565b60ff16036103455750736352a56caadc4f1e25cd6c75970fa768a3304e646103cd565b600184848481811061035957610359610aa6565b905060200201602081019061036e9190610a6d565b60ff16036103915750736131b5fae19ea4f9d964eac0408e4408b66337b56103cd565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9bdd5d195c881251607a1b60448201526064016102e6565b8585838181106103df576103df610aa6565b905060200201357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dd62ed3e8a8a8681811061042757610427610aa6565b905060200201602081019061043c9190610a8d565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529085166024820152604401602060405180830381865afa158015610486573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104aa9190610aba565b10156104c85760405162461bcd60e51b81526004016102e690610ad1565b806001600160a01b03168888848181106104e4576104e4610aa6565b90506020020160208101906104f99190610a8d565b6001600160a01b03167feab9cd112c05d2451f24acf7702297c9705b2115923d562c663c5272a60fe76f88888681811061053557610535610aa6565b9050602002013560405161054b91815260200190565b60405180910390a3506001016102f1565b5061056660018055565b505050505050565b610576610799565b61057e6107c5565b6105866107ef565b5f60ff82166105aa5750736352a56caadc4f1e25cd6c75970fa768a3304e646105cc565b5f1960ff8316016103915750736131b5fae19ea4f9d964eac0408e4408b66337b55b604051636eb1769f60e11b81526001600160a01b038581166004830152828116602483015284917f00000000000000000000000000000000000000000000000000000000000000009091169063dd62ed3e90604401602060405180830381865afa15801561063c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106609190610aba565b101561067e5760405162461bcd60e51b81526004016102e690610ad1565b806001600160a01b0316846001600160a01b03167feab9cd112c05d2451f24acf7702297c9705b2115923d562c663c5272a60fe76f856040516106c391815260200190565b60405180910390a3506106d560018055565b505050565b6106e2610799565b6106ea610819565b565b6106f4610799565b6106ea5f61086d565b610705610799565b6106ea6108bc565b5f60ff82166107315750736352a56caadc4f1e25cd6c75970fa768a3304e64919050565b5f1960ff8316016103915750736131b5fae19ea4f9d964eac0408e4408b66337b5919050565b919050565b610764610799565b6001600160a01b03811661078d57604051631e4fbdf760e01b81525f60048201526024016102e6565b6107968161086d565b50565b5f546001600160a01b031633146106ea5760405163118cdaa760e01b81523360048201526024016102e6565b5f54600160a01b900460ff16156106ea5760405163d93c066560e01b815260040160405180910390fd5b60026001540361081257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6108216108fe565b5f805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108c46107c5565b5f805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108503390565b5f54600160a01b900460ff166106ea57604051638dfc202b60e01b815260040160405180910390fd5b5f5f83601f840112610937575f5ffd5b50813567ffffffffffffffff81111561094e575f5ffd5b6020830191508360208260051b8501011115610968575f5ffd5b9250929050565b5f5f5f5f5f5f60608789031215610984575f5ffd5b863567ffffffffffffffff81111561099a575f5ffd5b6109a689828a01610927565b909750955050602087013567ffffffffffffffff8111156109c5575f5ffd5b6109d189828a01610927565b909550935050604087013567ffffffffffffffff8111156109f0575f5ffd5b6109fc89828a01610927565b979a9699509497509295939492505050565b80356001600160a01b0381168114610757575f5ffd5b803560ff81168114610757575f5ffd5b5f5f5f60608486031215610a46575f5ffd5b610a4f84610a0e565b925060208401359150610a6460408501610a24565b90509250925092565b5f60208284031215610a7d575f5ffd5b610a8682610a24565b9392505050565b5f60208284031215610a9d575f5ffd5b610a8682610a0e565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610aca575f5ffd5b5051919050565b60208082526026908201527f496e73756666696369656e74205553444320616c6c6f77616e636520666f72206040820152653937baba32b960d11b60608201526080019056fea264697066735822122002ddb94308cf22b12af03e2c8cf8cf912c6f66af862498651996981630a046bf64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x612E3146 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0x9F1F61A0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x9F1F61A0 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA4518EFB EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xCAC73ED7 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x612E3146 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x48FCDC7B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x57DF19E6 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18C786AF EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x1E8BCCA5 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x2B15E47C EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x106 PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x96F JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH2 0x16C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x106 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 PUSH2 0x16C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 PUSH2 0x16C JUMP JUMPDEST PUSH2 0x130 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0x130 PUSH2 0x6FD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16C JUMP JUMPDEST PUSH2 0x16C PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 DUP2 JUMP JUMPDEST PUSH2 0x16C PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 DUP2 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH2 0x130 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH2 0x268 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x270 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x7EF JUMP JUMPDEST DUP5 DUP4 EQ DUP1 ISZERO PUSH2 0x286 JUMPI POP DUP5 DUP2 EQ JUMPDEST DUP1 ISZERO PUSH2 0x293 JUMPI POP PUSH1 0x64 DUP6 GT ISZERO JUMPDEST PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E677468206D69736D61746368206F7220746F6F206C6172 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6765 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x55C JUMPI PUSH0 DUP1 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x30D JUMPI PUSH2 0x30D PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0xFF AND SUB PUSH2 0x345 JUMPI POP PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x1 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x359 JUMPI PUSH2 0x359 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0xFF AND SUB PUSH2 0x391 JUMPI POP PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9BDD5D195C881251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E6 JUMP JUMPDEST DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x3DF JUMPI PUSH2 0x3DF PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD62ED3E DUP11 DUP11 DUP7 DUP2 DUP2 LT PUSH2 0x427 JUMPI PUSH2 0x427 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x486 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0xABA JUMP JUMPDEST LT ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x4E4 JUMPI PUSH2 0x4E4 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEAB9CD112C05D2451F24ACF7702297C9705B2115923D562C663C5272A60FE76F DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x535 JUMPI PUSH2 0x535 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD PUSH2 0x2F1 JUMP JUMPDEST POP PUSH2 0x566 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x576 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x57E PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x586 PUSH2 0x7EF JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH2 0x5AA JUMPI POP PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 PUSH2 0x5CC JUMP JUMPDEST PUSH0 NOT PUSH1 0xFF DUP4 AND ADD PUSH2 0x391 JUMPI POP PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0xABA JUMP JUMPDEST LT ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEAB9CD112C05D2451F24ACF7702297C9705B2115923D562C663C5272A60FE76F DUP6 PUSH1 0x40 MLOAD PUSH2 0x6C3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x6D5 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6E2 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0x819 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6F4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x6EA PUSH0 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x705 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0x8BC JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH2 0x731 JUMPI POP PUSH20 0x6352A56CAADC4F1E25CD6C75970FA768A3304E64 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 NOT PUSH1 0xFF DUP4 AND ADD PUSH2 0x391 JUMPI POP PUSH20 0x6131B5FAE19EA4F9D964EAC0408E4408B66337B5 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x764 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x78D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x796 DUP2 PUSH2 0x86D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x821 PUSH2 0x8FE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8C4 PUSH2 0x7C5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x850 CALLER SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x937 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x968 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x984 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9A6 DUP10 DUP3 DUP11 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D1 DUP10 DUP3 DUP11 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9FC DUP10 DUP3 DUP11 ADD PUSH2 0x927 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x757 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x757 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA46 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA4F DUP5 PUSH2 0xA0E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0xA64 PUSH1 0x40 DUP6 ADD PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA86 DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA86 DUP3 PUSH2 0xA0E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xACA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205553444320616C6C6F77616E636520666F7220 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3937BABA32B9 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDD 0xB9 NUMBER ADDMOD 0xCF 0x22 0xB1 0x2A CREATE RETURNDATACOPY 0x2C DUP13 EXTCALL 0xCF SWAP2 0x2C PUSH16 0x66AF862498651996981630A046BF6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "13428:3762:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13821:38;;13858:1;13821:38;;;;;186:4:1;174:17;;;156:36;;144:2;129:18;13821:38:0;;;;;;;;15202:886;;;;;;:::i;:::-;;:::i;:::-;;14396:575;;;;;;:::i;:::-;;:::i;13497:28::-;;;;;;;;-1:-1:-1;;;;;2522:32:1;;;2504:51;;2492:2;2477:18;13497:28:0;2345:216:1;16241:65:0;;;:::i;13865:38::-;;13902:1;13865:38;;17085:103;13721:42;17085:103;;8575:84;8622:4;8645:7;-1:-1:-1;;;8645:7:0;;;;8575:84;;2939:14:1;;2932:22;2914:41;;2902:2;2887:18;8575:84:0;2774:187:1;16879:103:0;13629:42;16879:103;;6063:101;;;:::i;16138:61::-;;;:::i;5408:85::-;5454:7;5480:6;-1:-1:-1;;;;;5480:6:0;5408:85;;13677:86;;13721:42;13677:86;;13585;;13629:42;13585:86;;16464:312;;;;;;:::i;:::-;;:::i;6313:215::-;;;;;;:::i;:::-;;:::i;15202:886::-;5301:13;:11;:13::i;:::-;8199:19:::1;:17;:19::i;:::-;12085:21:::2;:19;:21::i;:::-;15404:34:::0;;::::3;:70:::0;::::3;;;-1:-1:-1::0;15442:32:0;;::::3;15404:70;:93;;;;-1:-1:-1::0;15494:3:0::3;15478:19:::0;::::3;;15404:93;15396:140;;;::::0;-1:-1:-1;;;15396:140:0;;3546:2:1;15396:140:0::3;::::0;::::3;3528:21:1::0;3585:2;3565:18;;;3558:30;3624:34;3604:18;;;3597:62;-1:-1:-1;;;3675:18:1;;;3668:32;3717:19;;15396:140:0::3;;;;;;;;;15551:9;15546:536;15566:16:::0;;::::3;15546:536;;;15603:14;::::0;15635:9;;15645:1;15635:12;;::::3;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;:28;;::::0;15631:258:::3;;-1:-1:-1::0;13629:42:0::3;15631:258;;;13902:1;15734:9:::0;;15744:1;15734:12;;::::3;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;:28;;::::0;15730:159:::3;;-1:-1:-1::0;13721:42:0::3;15730:159;;;15847:27;::::0;-1:-1:-1;;;15847:27:0;;4081:2:1;15847:27:0::3;::::0;::::3;4063:21:1::0;4120:2;4100:18;;;4093:30;-1:-1:-1;;;4139:18:1;;;4132:47;4196:18;;15847:27:0::3;3879:341:1::0;15730:159:0::3;15946:11;;15958:1;15946:14;;;;;;;:::i;:::-;;;;;;;15910:4;-1:-1:-1::0;;;;;15910:14:0::3;;15925:5;;15931:1;15925:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;15910:32;::::0;-1:-1:-1;;;;;;15910:32:0::3;::::0;;;;;;-1:-1:-1;;;;;4417:32:1;;;15910::0::3;::::0;::::3;4399:51:1::0;4486:32;;;4466:18;;;4459:60;4372:18;;15910:32:0::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;15902:101;;;;-1:-1:-1::0;;;15902:101:0::3;;;;;;;:::i;:::-;16064:6;-1:-1:-1::0;;;;;16022:49:0::3;16038:5;;16044:1;16038:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;16022:49:0::3;;16048:11;;16060:1;16048:14;;;;;;;:::i;:::-;;;;;;;16022:49;;;;5272:25:1::0;;5260:2;5245:18;;5126:177;16022:49:0::3;;;;;;;;-1:-1:-1::0;15584:3:0::3;;15546:536;;;;12127:20:::2;11442:1:::0;12653:21;;12473:208;12127:20:::2;15202:886:::0;;;;;;:::o;14396:575::-;5301:13;:11;:13::i;:::-;8199:19:::1;:17;:19::i;:::-;12085:21:::2;:19;:21::i;:::-;14556:14:::3;14584:24;::::0;::::3;14580:226;;-1:-1:-1::0;13629:42:0::3;14580:226;;;-1:-1:-1::0;;14671:24:0::3;::::0;::::3;::::0;14667:139:::3;;-1:-1:-1::0;13721:42:0::3;14667:139;14823:28;::::0;-1:-1:-1;;;14823:28:0;;-1:-1:-1;;;;;4417:32:1;;;14823:28:0::3;::::0;::::3;4399:51:1::0;4486:32;;;4466:18;;;4459:60;14855:10:0;;14823:4:::3;:14:::0;;::::3;::::0;::::3;::::0;4372:18:1;;14823:28:0::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;14815:93;;;;-1:-1:-1::0;;;14815:93:0::3;;;;;;;:::i;:::-;14957:6;-1:-1:-1::0;;;;;14923:41:0::3;14939:4;-1:-1:-1::0;;;;;14923:41:0::3;;14945:10;14923:41;;;;5272:25:1::0;;5260:2;5245:18;;5126:177;14923:41:0::3;;;;;;;;14546:425;12127:20:::2;11442:1:::0;12653:21;;12473:208;12127:20:::2;14396:575:::0;;;:::o;16241:65::-;5301:13;:11;:13::i;:::-;16289:10:::1;:8;:10::i;:::-;16241:65::o:0;6063:101::-;5301:13;:11;:13::i;:::-;6127:30:::1;6154:1;6127:18;:30::i;16138:61::-:0;5301:13;:11;:13::i;:::-;16184:8:::1;:6;:8::i;16464:312::-:0;16529:7;16552:24;;;16548:222;;-1:-1:-1;13629:42:0;;16464:312;-1:-1:-1;16464:312:0:o;16548:222::-;-1:-1:-1;;16637:24:0;;;;16633:137;;-1:-1:-1;13721:42:0;;16464:312;-1:-1:-1;16464:312:0:o;16633:137::-;16464:312;;;:::o;6313:215::-;5301:13;:11;:13::i;:::-;-1:-1:-1;;;;;6397:22:0;::::1;6393:91;;6442:31;::::0;-1:-1:-1;;;6442:31:0;;6470:1:::1;6442:31;::::0;::::1;2504:51:1::0;2477:18;;6442:31:0::1;2345:216:1::0;6393:91:0::1;6493:28;6512:8;6493:18;:28::i;:::-;6313:215:::0;:::o;5566:162::-;5454:7;5480:6;-1:-1:-1;;;;;5480:6:0;3565:10;5625:23;5621:101;;5671:40;;-1:-1:-1;;;5671:40:0;;3565:10;5671:40;;;2504:51:1;2477:18;;5671:40:0;2345:216:1;8727:128:0;8622:4;8645:7;-1:-1:-1;;;8645:7:0;;;;8788:61;;;8823:15;;-1:-1:-1;;;8823:15:0;;;;;;;;;;;12160:307;11484:1;12287:7;;:18;12283:86;;12328:30;;-1:-1:-1;;;12328:30:0;;;;;;;;;;;12283:86;11484:1;12443:7;:17;12160:307::o;9435:117::-;8446:16;:14;:16::i;:::-;9503:5:::1;9493:15:::0;;-1:-1:-1;;;;9493:15:0::1;::::0;;9523:22:::1;3565:10:::0;9532:12:::1;9523:22;::::0;-1:-1:-1;;;;;2522:32:1;;;2504:51;;2492:2;2477:18;9523:22:0::1;;;;;;;9435:117::o:0;6682:187::-;6755:16;6774:6;;-1:-1:-1;;;;;6790:17:0;;;-1:-1:-1;;;;;;6790:17:0;;;;;;6822:40;;6774:6;;;;;;;6822:40;;6755:16;6822:40;6745:124;6682:187;:::o;9188:115::-;8199:19;:17;:19::i;:::-;9247:7:::1;:14:::0;;-1:-1:-1;;;;9247:14:0::1;-1:-1:-1::0;;;9247:14:0::1;::::0;;9276:20:::1;9283:12;3565:10:::0;;3486:96;8927:126;8622:4;8645:7;-1:-1:-1;;;8645:7:0;;;;8985:62;;9021:15;;-1:-1:-1;;;9021:15:0;;;;;;;;;;;203:367:1;266:8;276:6;330:3;323:4;315:6;311:17;307:27;297:55;;348:1;345;338:12;297:55;-1:-1:-1;371:20:1;;414:18;403:30;;400:50;;;446:1;443;436:12;400:50;483:4;475:6;471:17;459:29;;543:3;536:4;526:6;523:1;519:14;511:6;507:27;503:38;500:47;497:67;;;560:1;557;550:12;497:67;203:367;;;;;:::o;575:1097::-;731:6;739;747;755;763;771;824:2;812:9;803:7;799:23;795:32;792:52;;;840:1;837;830:12;792:52;880:9;867:23;913:18;905:6;902:30;899:50;;;945:1;942;935:12;899:50;984:70;1046:7;1037:6;1026:9;1022:22;984:70;:::i;:::-;1073:8;;-1:-1:-1;958:96:1;-1:-1:-1;;1161:2:1;1146:18;;1133:32;1190:18;1177:32;;1174:52;;;1222:1;1219;1212:12;1174:52;1261:72;1325:7;1314:8;1303:9;1299:24;1261:72;:::i;:::-;1352:8;;-1:-1:-1;1235:98:1;-1:-1:-1;;1440:2:1;1425:18;;1412:32;1469:18;1456:32;;1453:52;;;1501:1;1498;1491:12;1453:52;1540:72;1604:7;1593:8;1582:9;1578:24;1540:72;:::i;:::-;575:1097;;;;-1:-1:-1;575:1097:1;;-1:-1:-1;575:1097:1;;1631:8;;575:1097;-1:-1:-1;;;575:1097:1:o;1677:173::-;1745:20;;-1:-1:-1;;;;;1794:31:1;;1784:42;;1774:70;;1840:1;1837;1830:12;1855:156;1921:20;;1981:4;1970:16;;1960:27;;1950:55;;2001:1;1998;1991:12;2016:324;2091:6;2099;2107;2160:2;2148:9;2139:7;2135:23;2131:32;2128:52;;;2176:1;2173;2166:12;2128:52;2199:29;2218:9;2199:29;:::i;:::-;2189:39;;2275:2;2264:9;2260:18;2247:32;2237:42;;2298:36;2330:2;2319:9;2315:18;2298:36;:::i;:::-;2288:46;;2016:324;;;;;:::o;2966:182::-;3023:6;3076:2;3064:9;3055:7;3051:23;3047:32;3044:52;;;3092:1;3089;3082:12;3044:52;3115:27;3132:9;3115:27;:::i;:::-;3105:37;2966:182;-1:-1:-1;;;2966:182:1:o;3153:186::-;3212:6;3265:2;3253:9;3244:7;3240:23;3236:32;3233:52;;;3281:1;3278;3271:12;3233:52;3304:29;3323:9;3304:29;:::i;3747:127::-;3808:10;3803:3;3799:20;3796:1;3789:31;3839:4;3836:1;3829:15;3863:4;3860:1;3853:15;4530:184;4600:6;4653:2;4641:9;4632:7;4628:23;4624:32;4621:52;;;4669:1;4666;4659:12;4621:52;-1:-1:-1;4692:16:1;;4530:184;-1:-1:-1;4530:184:1:o;4719:402::-;4921:2;4903:21;;;4960:2;4940:18;;;4933:30;4999:34;4994:2;4979:18;;4972:62;-1:-1:-1;;;5065:2:1;5050:18;;5043:36;5111:3;5096:19;;4719:402::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "578600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"KYBERSWAP_ID()": "237",
								"OPENOCEAN_ID()": "215",
								"_KYBERSWAP_ROUTER()": "237",
								"_OPENOCEAN_ROUTER()": "259",
								"approveAutoBuy(address,uint256,uint8)": "infinite",
								"batchAutoBuy(address[],uint256[],uint8[])": "infinite",
								"getKyberSwapRouter()": "279",
								"getOpenOceanRouter()": "235",
								"getRouterAddress(uint8)": "524",
								"owner()": "2418",
								"pause()": "infinite",
								"paused()": "2396",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28417",
								"unpause()": "infinite",
								"usdc()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 14042,
									"end": 14150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 14042,
									"end": 14150,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14099,
									"end": 14111,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5043,
									"end": 5069,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5043,
									"end": 5069,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5039,
									"end": 5134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5039,
									"end": 5134,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5120,
									"end": 5121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5092,
									"end": 5123,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5039,
									"end": 5134,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5039,
									"end": 5134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5143,
									"end": 5175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5162,
									"end": 5174,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5143,
									"end": 5161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 5143,
									"end": 5175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5143,
									"end": 5175,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5143,
									"end": 5175,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11442,
									"end": 11443,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11646,
									"end": 11667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11646,
									"end": 11667,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14123,
									"end": 14143,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14123,
									"end": 14143,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 14123,
									"end": 14143,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6682,
									"end": 6869,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6682,
									"end": 6869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6755,
									"end": 6771,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6774,
									"end": 6780,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6774,
									"end": 6780,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6790,
									"end": 6807,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6790,
									"end": 6807,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6790,
									"end": 6807,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6790,
									"end": 6807,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6790,
									"end": 6807,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6790,
									"end": 6807,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6790,
									"end": 6807,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6790,
									"end": 6807,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6790,
									"end": 6807,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6822,
									"end": 6862,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6822,
									"end": 6862,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6774,
									"end": 6780,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6774,
									"end": 6780,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6774,
									"end": 6780,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6774,
									"end": 6780,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6774,
									"end": 6780,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6774,
									"end": 6780,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6774,
									"end": 6780,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6822,
									"end": 6862,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 6822,
									"end": 6862,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6755,
									"end": 6771,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6822,
									"end": 6862,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 6745,
									"end": 6869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6682,
									"end": 6869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6682,
									"end": 6869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 494,
									"end": 697,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "435"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13428,
									"end": 17190,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002ddb94308cf22b12af03e2c8cf8cf912c6f66af862498651996981630a046bf64736f6c634300081e0033",
									".code": [
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "612E3146"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "9F1F61A0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "9F1F61A0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "A4518EFB"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "CAC73ED7"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "612E3146"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "48FCDC7B"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "57DF19E6"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "18C786AF"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "1E8BCCA5"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "2B15E47C"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "3E413BEE"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 17190,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13858,
											"end": 13859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 190,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 174,
											"end": 191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 174,
											"end": 191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 174,
											"end": 191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 156,
											"end": 192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 156,
											"end": 192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 144,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 129,
											"end": 147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13859,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15202,
											"end": 16088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15202,
											"end": 16088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14396,
											"end": 14971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14396,
											"end": 14971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2345,
											"end": 2561,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16241,
											"end": 16306,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16241,
											"end": 16306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16241,
											"end": 16306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16241,
											"end": 16306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16241,
											"end": 16306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13903,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13865,
											"end": 13903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13902,
											"end": 13903,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13865,
											"end": 13903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13903,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17085,
											"end": 17188,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17085,
											"end": 17188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13721,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "6131B5FAE19EA4F9D964EAC0408E4408B66337B5"
										},
										{
											"begin": 17085,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17085,
											"end": 17188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8575,
											"end": 8659,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8575,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8622,
											"end": 8626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8575,
											"end": 8659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8575,
											"end": 8659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2953,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2954,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2774,
											"end": 2961,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16879,
											"end": 16982,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16879,
											"end": 16982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13629,
											"end": 13671,
											"name": "PUSH",
											"source": 0,
											"value": "6352A56CAADC4F1E25CD6C75970FA768A3304E64"
										},
										{
											"begin": 16879,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16879,
											"end": 16982,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6164,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6063,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6063,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6063,
											"end": 6164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16199,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16138,
											"end": 16199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16138,
											"end": 16199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 16138,
											"end": 16199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5408,
											"end": 5493,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5408,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5486,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5480,
											"end": 5486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5408,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5408,
											"end": 5493,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13677,
											"end": 13763,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13677,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13677,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13721,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "6131B5FAE19EA4F9D964EAC0408E4408B66337B5"
										},
										{
											"begin": 13677,
											"end": 13763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13677,
											"end": 13763,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13671,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13585,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13629,
											"end": 13671,
											"name": "PUSH",
											"source": 0,
											"value": "6352A56CAADC4F1E25CD6C75970FA768A3304E64"
										},
										{
											"begin": 13585,
											"end": 13671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13585,
											"end": 13671,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16464,
											"end": 16776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16464,
											"end": 16776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6313,
											"end": 6528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6313,
											"end": 6528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5301,
											"end": 5314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8199,
											"end": 8216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8199,
											"end": 8218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8199,
											"end": 8218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12106,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12085,
											"end": 12104,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12085,
											"end": 12106,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12106,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12085,
											"end": 12106,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15438,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15474,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15474,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15404,
											"end": 15474,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15442,
											"end": 15474,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15442,
											"end": 15474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15442,
											"end": 15474,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15474,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15404,
											"end": 15474,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15497,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15497,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15497,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15404,
											"end": 15497,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15494,
											"end": 15497,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15478,
											"end": 15497,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15497,
											"modifierDepth": 3,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15497,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15404,
											"end": 15497,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15404,
											"end": 15497,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15396,
											"end": 15536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15396,
											"end": 15536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15396,
											"end": 15536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3587,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3658,
											"name": "PUSH",
											"source": 1,
											"value": "4172726179206C656E677468206D69736D61746368206F7220746F6F206C6172"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3693,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3675,
											"end": 3693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15396,
											"end": 15536,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15551,
											"end": 15560,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15566,
											"end": 15582,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15566,
											"end": 15582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15566,
											"end": 15582,
											"modifierDepth": 3,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15617,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15603,
											"end": 15617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15644,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15644,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15645,
											"end": 15646,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15635,
											"end": 15647,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15635,
											"end": 15647,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15635,
											"end": 15647,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15663,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15635,
											"end": 15663,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15635,
											"end": 15663,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15631,
											"end": 15889,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15631,
											"end": 15889,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13629,
											"end": 13671,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "6352A56CAADC4F1E25CD6C75970FA768A3304E64"
										},
										{
											"begin": 15631,
											"end": 15889,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15631,
											"end": 15889,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15631,
											"end": 15889,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15631,
											"end": 15889,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13902,
											"end": 13903,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15734,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15744,
											"end": 15745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15734,
											"end": 15746,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15734,
											"end": 15746,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15734,
											"end": 15746,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15762,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15734,
											"end": 15762,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15734,
											"end": 15762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15730,
											"end": 15889,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15730,
											"end": 15889,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13721,
											"end": 13763,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "6131B5FAE19EA4F9D964EAC0408E4408B66337B5"
										},
										{
											"begin": 15730,
											"end": 15889,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15730,
											"end": 15889,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15730,
											"end": 15889,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15730,
											"end": 15889,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15847,
											"end": 15874,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15847,
											"end": 15874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15847,
											"end": 15874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15847,
											"end": 15874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15847,
											"end": 15874,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15847,
											"end": 15874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15847,
											"end": 15874,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4120,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4100,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4100,
											"end": 4118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C9BDD5D195C881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15847,
											"end": 15874,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3879,
											"end": 4220,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15889,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15730,
											"end": 15889,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15957,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15957,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15958,
											"end": 15959,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15946,
											"end": 15960,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15960,
											"modifierDepth": 3,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15914,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "435"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15910,
											"end": 15924,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15924,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 15925,
											"end": 15930,
											"modifierDepth": 3,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15930,
											"modifierDepth": 3,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15932,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15925,
											"end": 15933,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15925,
											"end": 15933,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15925,
											"end": 15933,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15910,
											"end": 15942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15910,
											"end": 15942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4417,
											"end": 4449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15910,
											"end": 15942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4399,
											"end": 4450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4518,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4518,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4466,
											"end": 4484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15910,
											"end": 15942,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15910,
											"end": 15942,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15960,
											"modifierDepth": 3,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15960,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15902,
											"end": 16003,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15902,
											"end": 16003,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16064,
											"end": 16070,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16043,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16043,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16044,
											"end": 16045,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16038,
											"end": 16046,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16038,
											"end": 16046,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 16038,
											"end": 16046,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "EAB9CD112C05D2451F24ACF7702297C9705B2115923D562C663C5272A60FE76F"
										},
										{
											"begin": 16048,
											"end": 16059,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16059,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16060,
											"end": 16061,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16048,
											"end": 16062,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16062,
											"modifierDepth": 3,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5303,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16022,
											"end": 16071,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15584,
											"end": 15587,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15584,
											"end": 15587,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15546,
											"end": 16082,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12127,
											"end": 12147,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11442,
											"end": 11443,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12473,
											"end": 12681,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12127,
											"end": 12147,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12127,
											"end": 12147,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 16088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5301,
											"end": 5314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8199,
											"end": 8216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8199,
											"end": 8218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8199,
											"end": 8218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12106,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12085,
											"end": 12104,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12085,
											"end": 12106,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12106,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12085,
											"end": 12106,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14570,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14584,
											"end": 14608,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14584,
											"end": 14608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14608,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14580,
											"end": 14806,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 14580,
											"end": 14806,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13629,
											"end": 13671,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "6352A56CAADC4F1E25CD6C75970FA768A3304E64"
										},
										{
											"begin": 14580,
											"end": 14806,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14580,
											"end": 14806,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14580,
											"end": 14806,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 14580,
											"end": 14806,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14671,
											"end": 14695,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14671,
											"end": 14695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14671,
											"end": 14695,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14671,
											"end": 14695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14667,
											"end": 14806,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14667,
											"end": 14806,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13721,
											"end": 13763,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "6131B5FAE19EA4F9D964EAC0408E4408B66337B5"
										},
										{
											"begin": 14667,
											"end": 14806,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14667,
											"end": 14806,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14823,
											"end": 14851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14823,
											"end": 14851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4417,
											"end": 4449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14823,
											"end": 14851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4399,
											"end": 4450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4518,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4466,
											"end": 4484,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14855,
											"end": 14865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14827,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 14823,
											"end": 14837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14837,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14837,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 14823,
											"end": 14837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14823,
											"end": 14851,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14823,
											"end": 14851,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14865,
											"modifierDepth": 3,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14823,
											"end": 14865,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 14815,
											"end": 14908,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14815,
											"end": 14908,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14963,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14939,
											"end": 14943,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "EAB9CD112C05D2451F24ACF7702297C9705B2115923D562C663C5272A60FE76F"
										},
										{
											"begin": 14945,
											"end": 14955,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5303,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14964,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14546,
											"end": 14971,
											"modifierDepth": 3,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12127,
											"end": 12147,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 11442,
											"end": 11443,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12473,
											"end": 12681,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12127,
											"end": 12147,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12127,
											"end": 12147,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16241,
											"end": 16306,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16241,
											"end": 16306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5301,
											"end": 5314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16289,
											"end": 16299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16289,
											"end": 16297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16289,
											"end": 16299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16289,
											"end": 16299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16289,
											"end": 16299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16241,
											"end": 16306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6164,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6063,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5301,
											"end": 5314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6127,
											"end": 6157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6154,
											"end": 6155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6127,
											"end": 6157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16199,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 16138,
											"end": 16199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5301,
											"end": 5314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16184,
											"end": 16192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16184,
											"end": 16190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 16184,
											"end": 16192,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 16536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16552,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16552,
											"end": 16576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16548,
											"end": 16770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13629,
											"end": 13671,
											"name": "PUSH",
											"source": 0,
											"value": "6352A56CAADC4F1E25CD6C75970FA768A3304E64"
										},
										{
											"begin": 13629,
											"end": 13671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16464,
											"end": 16776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16770,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16548,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16637,
											"end": 16661,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16637,
											"end": 16661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16637,
											"end": 16661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16637,
											"end": 16661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16633,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 16633,
											"end": 16770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13721,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "6131B5FAE19EA4F9D964EAC0408E4408B66337B5"
										},
										{
											"begin": 13721,
											"end": 13763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16464,
											"end": 16776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16633,
											"end": 16770,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16633,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5301,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5301,
											"end": 5314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6397,
											"end": 6419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6393,
											"end": 6484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6393,
											"end": 6484,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2345,
											"end": 2561,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6393,
											"end": 6484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6512,
											"end": 6520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6493,
											"end": 6521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6493,
											"end": 6521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5728,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5566,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5486,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5480,
											"end": 5486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3575,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5625,
											"end": 5648,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5621,
											"end": 5722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5671,
											"end": 5711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5671,
											"end": 5711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3575,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5671,
											"end": 5711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2345,
											"end": 2561,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8727,
											"end": 8855,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8727,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8622,
											"end": 8626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8788,
											"end": 8849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8788,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8788,
											"end": 8849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12160,
											"end": 12467,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12160,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11484,
											"end": 11485,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12287,
											"end": 12294,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12287,
											"end": 12294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12283,
											"end": 12369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12328,
											"end": 12358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12369,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12283,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11484,
											"end": 11485,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12443,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12443,
											"end": 12460,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12160,
											"end": 12467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9552,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 9435,
											"end": 9552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8446,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 8446,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 8446,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8446,
											"end": 8462,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 8446,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9493,
											"end": 9508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 3565,
											"end": 3575,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 9532,
											"end": 9544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9523,
											"end": 9545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9523,
											"end": 9545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9523,
											"end": 9545,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9545,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9545,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9523,
											"end": 9545,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 9435,
											"end": 9552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6682,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 6771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6822,
											"end": 6862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6822,
											"end": 6862,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6822,
											"end": 6862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 6771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6822,
											"end": 6862,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6745,
											"end": 6869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9303,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9188,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8199,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8199,
											"end": 8218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8218,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8199,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9247,
											"end": 9254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9247,
											"end": 9261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9247,
											"end": 9261,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9247,
											"end": 9261,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9247,
											"end": 9261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9247,
											"end": 9261,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9276,
											"end": 9296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 9283,
											"end": 9295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3565,
											"end": 3575,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3582,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9053,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 8927,
											"end": 9053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8622,
											"end": 8626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8985,
											"end": 9047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 203,
											"end": 570,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 203,
											"end": 570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 333,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 323,
											"end": 327,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 315,
											"end": 321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 311,
											"end": 328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 307,
											"end": 334,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 297,
											"end": 352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 348,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 297,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 371,
											"end": 391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 371,
											"end": 391,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 414,
											"end": 432,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 403,
											"end": 433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 433,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 400,
											"end": 450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 400,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 400,
											"end": 450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 446,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 448,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 400,
											"end": 450,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 400,
											"end": 450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 487,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 471,
											"end": 488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 459,
											"end": 488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 459,
											"end": 488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 543,
											"end": 546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 536,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 523,
											"end": 524,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 519,
											"end": 533,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 507,
											"end": 534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 547,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 497,
											"end": 564,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 497,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 497,
											"end": 564,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 562,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 497,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 497,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 203,
											"end": 570,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 203,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 203,
											"end": 570,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 203,
											"end": 570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 203,
											"end": 570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 803,
											"end": 810,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 795,
											"end": 827,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 792,
											"end": 844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 792,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 792,
											"end": 844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 792,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 792,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 889,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 867,
											"end": 890,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 913,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 902,
											"end": 932,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 899,
											"end": 949,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 899,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 899,
											"end": 949,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 945,
											"end": 946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 947,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 899,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 899,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1035,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 984,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1054,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 984,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1081,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 958,
											"end": 1054,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1165,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1177,
											"end": 1209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1209,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1224,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1325,
											"end": 1332,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1312,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1261,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1333,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1261,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1360,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1333,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1443,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1444,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1456,
											"end": 1488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1488,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1453,
											"end": 1505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1453,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1604,
											"end": 1611,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1540,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1612,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1540,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 575,
											"end": 1672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 575,
											"end": 1672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1850,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1677,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1765,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1794,
											"end": 1825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1825,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1826,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1774,
											"end": 1844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 2011,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1855,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1941,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1985,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1970,
											"end": 1986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1987,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1950,
											"end": 2005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2003,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2340,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2016,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2162,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2148,
											"end": 2157,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2146,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2158,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2163,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2128,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2178,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2128,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2199,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2228,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2199,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2228,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2279,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2330,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2298,
											"end": 2334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3148,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2966,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3064,
											"end": 3073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3079,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3096,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3044,
											"end": 3096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3096,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3044,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 3132,
											"end": 3141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3115,
											"end": 3142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3142,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 3115,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3142,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3148,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 3148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3339,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3153,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3268,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3285,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 3233,
											"end": 3285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 3233,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3304,
											"end": 3333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3747,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3803,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3836,
											"end": 3837,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4714,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4530,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4641,
											"end": 4650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4639,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4656,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4671,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4621,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4530,
											"end": 4714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4719,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4903,
											"end": 4924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E74205553444320616C6C6F77616E636520666F7220"
										},
										{
											"begin": 4994,
											"end": 4996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4979,
											"end": 4997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 4997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3937BABA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5065,
											"end": 5067,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5050,
											"end": 5068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5114,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5096,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 5121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Optimized_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"KYBERSWAP_ID()": "48fcdc7b",
							"OPENOCEAN_ID()": "18c786af",
							"_KYBERSWAP_ROUTER()": "9f1f61a0",
							"_OPENOCEAN_ROUTER()": "a4518efb",
							"approveAutoBuy(address,uint256,uint8)": "2b15e47c",
							"batchAutoBuy(address[],uint256[],uint8[])": "1e8bcca5",
							"getKyberSwapRouter()": "57df19e6",
							"getOpenOceanRouter()": "612e3146",
							"getRouterAddress(uint8)": "cac73ed7",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"usdc()": "3e413bee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"AutoBuyApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"KYBERSWAP_ID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPENOCEAN_ID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_KYBERSWAP_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_OPENOCEAN_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"routerId\",\"type\":\"uint8\"}],\"name\":\"approveAutoBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"usdcAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"routerIds\",\"type\":\"uint8[]\"}],\"name\":\"batchAutoBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getKyberSwapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenOceanRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"routerId\",\"type\":\"uint8\"}],\"name\":\"getRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Ultra-lightweight auto-buy contract optimized for <15k gas per transaction  Design Philosophy: - Hard-coded trusted routers for maximum gas efficiency - Users approve routers directly to pull USDC - Backend handles validation, tracking, and swap execution - Standard USDC approval for simple UX - Minimal gas footprint for microtransactions\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approveAutoBuy(address,uint256,uint8)\":{\"details\":\"Ultra-light auto-buy approval function (hard-coded routers)\",\"params\":{\"routerId\":\"Router ID (0=OpenOcean, 1=KyberSwap)\",\"usdcAmount\":\"Amount of USDC to approve\",\"user\":\"User's wallet address\"}},\"batchAutoBuy(address[],uint256[],uint8[])\":{\"details\":\"Batch auto-buy approval for multiple users/amounts/routers//\",\"params\":{\"routerIds\":\"Array of router IDs\",\"usdcAmounts\":\"Array of USDC amounts\",\"users\":\"Array of user addresses\"}},\"getKyberSwapRouter()\":{\"details\":\"Get KyberSwap router address\",\"returns\":{\"_0\":\"KyberSwap router address\"}},\"getOpenOceanRouter()\":{\"details\":\"Get OpenOcean router address\",\"returns\":{\"_0\":\"OpenOcean router address\"}},\"getRouterAddress(uint8)\":{\"details\":\"Get router address by ID\",\"params\":{\"routerId\":\"Router ID (0=OpenOcean, 1=KyberSwap)\"},\"returns\":{\"_0\":\"Router contract address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Emergency pause\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause\"}},\"title\":\"investreAutoBuy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Optimized_flattened.sol\":\"investreAutoBuy\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Optimized_flattened.sol\":{\"keccak256\":\"0x1587a28b22bd0557b50b4b93e6080a2585e4ef86dee21646ba21861dd692124f\",\"urls\":[\"bzz-raw://bde6af26ca4ba9536021e09b7dcadfa2ea907eaedc6a6ee707d33abae53aa191\",\"dweb:/ipfs/QmVrmJUZjAhybb1aBMU9TYYt3tJMEivJyfdvGeN33sQgx5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "Optimized_flattened.sol:investreAutoBuy",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 257,
								"contract": "Optimized_flattened.sol:investreAutoBuy",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 366,
								"contract": "Optimized_flattened.sol:investreAutoBuy",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Optimized_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Optimized_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Optimized_flattened.sol": {
				"ast": {
					"absolutePath": "Optimized_flattened.sol",
					"exportedSymbols": {
						"Context": [
							106
						],
						"IERC20": [
							77
						],
						"Ownable": [
							251
						],
						"Pausable": [
							356
						],
						"ReentrancyGuard": [
							424
						],
						"investreAutoBuy": [
							707
						]
					},
					"id": 708,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "133:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "160:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "242:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "255:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "424:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "449:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "433:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "471:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "455:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "483:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "475:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:57:0"
									},
									"src": "418:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "496:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "655:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "664:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "687:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:63:0"
									},
									"src": "649:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "733:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "812:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "849:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:9:0"
									},
									"scope": 77,
									"src": "803:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "864:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "949:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "967:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "959:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "999:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:9:0"
									},
									"scope": 77,
									"src": "940:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1014:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1241:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1258:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1250:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1270:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1262:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1249:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1295:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1295:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1294:6:0"
									},
									"scope": 77,
									"src": "1232:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1307:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1585:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1603:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1595:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1618:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1610:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1594:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1650:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:9:0"
									},
									"scope": 77,
									"src": "1576:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1665:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2346:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2379:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2371:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2404:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2404:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:6:0"
									},
									"scope": 77,
									"src": "2337:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2416:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2727:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2748:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2740:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2762:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2754:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2799:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2799:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:6:0"
									},
									"scope": 77,
									"src": "2718:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 708,
							"src": "232:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2931:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "2957:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 106,
							"linearizedBaseContracts": [
								106
							],
							"name": "Context",
							"nameLocation": "3472:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "3548:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 84,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3565:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3569:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3565:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 83,
												"id": 86,
												"nodeType": "Return",
												"src": "3558:17:0"
											}
										]
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3495:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3539:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:0"
									},
									"scope": 106,
									"src": "3486:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "3655:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 93,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3672:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3676:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "3672:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 92,
												"id": 95,
												"nodeType": "Return",
												"src": "3665:15:0"
											}
										]
									},
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "3597:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3605:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3639:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 90,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3639:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3638:16:0"
									},
									"scope": 106,
									"src": "3588:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "3765:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3782:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 101,
												"id": 103,
												"nodeType": "Return",
												"src": "3775:8:0"
											}
										]
									},
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "3702:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:2:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "3756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:9:0"
									},
									"scope": 106,
									"src": "3693:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 708,
							"src": "3454:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3918:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nameLocations": [
											"4462:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 106,
										"src": "4462:7:0"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "4462:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "3945:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								106
							],
							"name": "Ownable",
							"nameLocation": "4451:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 112,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "4492:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "4476:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 111,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4476:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "4505:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 117,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "4601:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4636:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "4628:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:0"
									},
									"src": "4595:50:0"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "4651:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 122,
									"name": "OwnableInvalidOwner",
									"nameLocation": "4744:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4772:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4764:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4763:15:0"
									},
									"src": "4738:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 128,
									"name": "OwnershipTransferred",
									"nameLocation": "4791:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "4828:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4812:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4859:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4843:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:57:0"
									},
									"src": "4785:84:0"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5029:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 134,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "5043:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5067:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 135,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5059:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5059:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5043:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "5039:95:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "5071:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5120:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5112:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 141,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5112:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 140,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "5092:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5092:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "5085:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 150,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "5162:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 149,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "5143:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5143:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "5143:32:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "4875:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 154,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "5015:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5007:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5006:22:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5029:0:0"
									},
									"scope": 251,
									"src": "4995:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "5291:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "5301:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5301:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "5301:13:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "5324:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "5188:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 162,
									"name": "onlyOwner",
									"nameLocation": "5279:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5288:2:0"
									},
									"src": "5270:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "5463:30:0",
										"statements": [
											{
												"expression": {
													"id": 168,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "5480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 167,
												"id": 169,
												"nodeType": "Return",
												"src": "5473:13:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "5338:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "5417:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5422:2:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "5454:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5453:9:0"
									},
									"scope": 251,
									"src": "5408:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "5611:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5625:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5625:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 177,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "5636:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5636:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5625:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 186,
												"nodeType": "IfStatement",
												"src": "5621:101:0",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "5650:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 181,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 88,
																			"src": "5698:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5698:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 180,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "5671:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5671:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 184,
															"nodeType": "RevertStatement",
															"src": "5664:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "5499:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "5575:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5586:2:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5611:0:0"
									},
									"scope": 251,
									"src": "5566:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "6117:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6154:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6146:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 195,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6146:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6146:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 194,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "6127:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6127:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "6127:30:0"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "5734:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 192,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 191,
												"name": "onlyOwner",
												"nameLocations": [
													"6107:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "6107:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6107:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "6072:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6089:2:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:0"
									},
									"scope": 251,
									"src": "6063:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "6383:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 210,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "6397:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6417:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 211,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6409:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6409:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6397:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "IfStatement",
												"src": "6393:91:0",
												"trueBody": {
													"id": 223,
													"nodeType": "Block",
													"src": "6421:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6470:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6462:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 217,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6462:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6462:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 216,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "6442:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6442:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 222,
															"nodeType": "RevertStatement",
															"src": "6435:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6512:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 225,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "6493:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6493:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "6493:28:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "6170:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 207,
												"name": "onlyOwner",
												"nameLocations": [
													"6373:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "6373:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6373:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "6322:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6348:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "6340:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6339:18:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6383:0:0"
									},
									"scope": 251,
									"src": "6313:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "6745:124:0",
										"statements": [
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "6763:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 249,
														"src": "6755:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 236,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6755:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 239,
												"initialValue": {
													"id": 238,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "6774:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6755:25:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 240,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "6790:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "6799:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6790:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "6790:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6843:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6853:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 244,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "6822:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6822:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "EmitStatement",
												"src": "6817:45:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "6534:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "6691:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6718:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6710:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6709:18:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6745:0:0"
									},
									"scope": 251,
									"src": "6682:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 708,
							"src": "4433:2438:0",
							"usedErrors": [
								117,
								122
							],
							"usedEvents": [
								128
							]
						},
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6997:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 254,
										"name": "Context",
										"nameLocations": [
											"7494:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 106,
										"src": "7494:7:0"
									},
									"id": 255,
									"nodeType": "InheritanceSpecifier",
									"src": "7494:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "7024:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 356,
							"linearizedBaseContracts": [
								356,
								106
							],
							"name": "Pausable",
							"nameLocation": "7482:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 257,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "7521:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "7508:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 256,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "7508:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "7535:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 262,
									"name": "Paused",
									"nameLocation": "7619:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7634:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7626:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7625:17:0"
									},
									"src": "7613:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7649:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 267,
									"name": "Unpaused",
									"nameLocation": "7730:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7738:17:0"
									},
									"src": "7724:32:0"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "7762:76:0",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 270,
									"name": "EnforcedPause",
									"nameLocation": "7849:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7862:2:0"
									},
									"src": "7843:22:0"
								},
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "7871:80:0",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 273,
									"name": "ExpectedPause",
									"nameLocation": "7962:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7975:2:0"
									},
									"src": "7956:22:0"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "8189:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 276,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "8199:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8199:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "8199:19:0"
											},
											{
												"id": 279,
												"nodeType": "PlaceholderStatement",
												"src": "8228:1:0"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "7984:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 281,
									"name": "whenNotPaused",
									"nameLocation": "8173:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8186:2:0"
									},
									"src": "8164:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "8436:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 284,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "8446:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8446:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "8446:16:0"
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "8472:1:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "8242:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 289,
									"name": "whenPaused",
									"nameLocation": "8423:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8433:2:0"
									},
									"src": "8414:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "8628:31:0",
										"statements": [
											{
												"expression": {
													"id": 295,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 257,
													"src": "8645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 294,
												"id": 296,
												"nodeType": "Return",
												"src": "8638:14:0"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "8486:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "8584:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8590:2:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "8622:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8622:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8621:6:0"
									},
									"scope": 356,
									"src": "8575:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "8778:77:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 302,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "8792:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8792:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "8788:61:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "8802:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 304,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "8823:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8823:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 306,
															"nodeType": "RevertStatement",
															"src": "8816:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "8665:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "8736:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8753:2:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8778:0:0"
									},
									"scope": 356,
									"src": "8727:128:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "8975:78:0",
										"statements": [
											{
												"condition": {
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8989:9:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 314,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "8990:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8990:8:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "IfStatement",
												"src": "8985:62:0",
												"trueBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "9000:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 317,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "9021:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9021:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 319,
															"nodeType": "RevertStatement",
															"src": "9014:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "8861:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "8936:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8950:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8975:0:0"
									},
									"scope": 356,
									"src": "8927:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "9237:66:0",
										"statements": [
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "9247:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9257:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9247:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "9247:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 334,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "9283:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9283:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 333,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "9276:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9276:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "EmitStatement",
												"src": "9271:25:0"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "9059:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 326,
												"name": "whenNotPaused",
												"nameLocations": [
													"9223:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 281,
												"src": "9223:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9223:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "9197:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9203:2:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9237:0:0"
									},
									"scope": 356,
									"src": "9188:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "9483:69:0",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "9493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9503:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "9493:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "9493:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 350,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "9532:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9532:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "9523:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9523:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "EmitStatement",
												"src": "9518:27:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "9309:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 343,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 342,
												"name": "whenPaused",
												"nameLocations": [
													"9472:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 289,
												"src": "9472:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9472:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "9444:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9452:2:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9483:0:0"
									},
									"scope": 356,
									"src": "9435:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 708,
							"src": "7464:2090:0",
							"usedErrors": [
								270,
								273
							],
							"usedEvents": [
								262,
								267
							]
						},
						{
							"id": 357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "9694:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 358,
								"nodeType": "StructuredDocumentation",
								"src": "9720:894:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 424,
							"linearizedBaseContracts": [
								424
							],
							"name": "ReentrancyGuard",
							"nameLocation": "10633:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 361,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "11428:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 424,
									"src": "11403:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11403:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11442:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 364,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "11474:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 424,
									"src": "11449:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 362,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11449:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11484:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 366,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "11508:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 424,
									"src": "11492:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 365,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11492:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "11522:52:0",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 369,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "11585:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11613:2:0"
									},
									"src": "11579:37:0"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "11636:38:0",
										"statements": [
											{
												"expression": {
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 372,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "11646:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 373,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "11656:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11646:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "11646:21:0"
											}
										]
									},
									"id": 377,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11633:2:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11636:0:0"
									},
									"scope": 424,
									"src": "11622:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "12075:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 380,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "12085:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12085:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "12085:21:0"
											},
											{
												"id": 383,
												"nodeType": "PlaceholderStatement",
												"src": "12116:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 384,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "12127:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12127:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "12127:20:0"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "11680:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 388,
									"name": "nonReentrant",
									"nameLocation": "12060:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12072:2:0"
									},
									"src": "12051:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "12199:268:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "12287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 392,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "12298:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12287:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "12283:86:0",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "12307:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 394,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "12328:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12328:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 396,
															"nodeType": "RevertStatement",
															"src": "12321:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 399,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "12443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 400,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "12453:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12443:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "12443:17:0"
											}
										]
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "12169:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12188:2:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12199:0:0"
									},
									"scope": 424,
									"src": "12160:307:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "12511:170:0",
										"statements": [
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 407,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "12653:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 408,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "12663:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12653:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "12653:21:0"
											}
										]
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "12482:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12500:2:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12511:0:0"
									},
									"scope": 424,
									"src": "12473:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "12924:42:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "12941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 419,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "12952:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12941:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 417,
												"id": 421,
												"nodeType": "Return",
												"src": "12934:25:0"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "12687:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "12869:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12892:2:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "12918:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12918:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:6:0"
									},
									"scope": 424,
									"src": "12860:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 708,
							"src": "10615:2353:0",
							"usedErrors": [
								369
							],
							"usedEvents": []
						},
						{
							"id": 425,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "12995:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 427,
										"name": "Ownable",
										"nameLocations": [
											"13456:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 251,
										"src": "13456:7:0"
									},
									"id": 428,
									"nodeType": "InheritanceSpecifier",
									"src": "13456:7:0"
								},
								{
									"baseName": {
										"id": 429,
										"name": "Pausable",
										"nameLocations": [
											"13465:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 356,
										"src": "13465:8:0"
									},
									"id": 430,
									"nodeType": "InheritanceSpecifier",
									"src": "13465:8:0"
								},
								{
									"baseName": {
										"id": 431,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"13475:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 424,
										"src": "13475:15:0"
									},
									"id": 432,
									"nodeType": "InheritanceSpecifier",
									"src": "13475:15:0"
								}
							],
							"canonicalName": "investreAutoBuy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 426,
								"nodeType": "StructuredDocumentation",
								"src": "13024:403:0",
								"text": " @title investreAutoBuy\n @dev Ultra-lightweight auto-buy contract optimized for <15k gas per transaction\n \n Design Philosophy:\n - Hard-coded trusted routers for maximum gas efficiency\n - Users approve routers directly to pull USDC\n - Backend handles validation, tracking, and swap execution\n - Standard USDC approval for simple UX\n - Minimal gas footprint for microtransactions"
							},
							"fullyImplemented": true,
							"id": 707,
							"linearizedBaseContracts": [
								707,
								424,
								356,
								251,
								106
							],
							"name": "investreAutoBuy",
							"nameLocation": "13437:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 435,
									"mutability": "immutable",
									"name": "usdc",
									"nameLocation": "13521:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 707,
									"src": "13497:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 434,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 433,
											"name": "IERC20",
											"nameLocations": [
												"13497:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "13497:6:0"
										},
										"referencedDeclaration": 77,
										"src": "13497:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a4518efb",
									"id": 438,
									"mutability": "constant",
									"name": "_OPENOCEAN_ROUTER",
									"nameLocation": "13609:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 707,
									"src": "13585:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 436,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13585:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836333532613536636161644334463145323543443663373539373046613736384133333034653634",
										"id": 437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13629:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6352a56caadC4F1E25CD6c75970Fa768A3304e64"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9f1f61a0",
									"id": 441,
									"mutability": "constant",
									"name": "_KYBERSWAP_ROUTER",
									"nameLocation": "13701:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 707,
									"src": "13677:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 439,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13677:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836313331423566616531394541346639443936346541633034303845343430386236363333376235",
										"id": 440,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13721:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "18c786af",
									"id": 444,
									"mutability": "constant",
									"name": "OPENOCEAN_ID",
									"nameLocation": "13843:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 707,
									"src": "13821:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 442,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "13821:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 443,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13858:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "48fcdc7b",
									"id": 447,
									"mutability": "constant",
									"name": "KYBERSWAP_ID",
									"nameLocation": "13887:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 707,
									"src": "13865:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 445,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "13865:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 446,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13902:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "eab9cd112c05d2451f24acf7702297c9705b2115923d562c663c5272a60fe76f",
									"id": 455,
									"name": "AutoBuyApproved",
									"nameLocation": "13954:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "13986:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "13970:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "14000:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "13992:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "14028:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "14012:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13969:66:0"
									},
									"src": "13948:88:0"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "14113:37:0",
										"statements": [
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 465,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "14123:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 467,
																"name": "_usdc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "14137:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 466,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "14130:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14130:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "14123:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "14123:20:0"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 462,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "14099:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 463,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 461,
												"name": "Ownable",
												"nameLocations": [
													"14091:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 251,
												"src": "14091:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14091:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "14062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "14054:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "14077:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "14069:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14053:37:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14113:0:0"
									},
									"scope": 707,
									"src": "14042:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "14546:425:0",
										"statements": [
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "router",
														"nameLocation": "14564:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "14556:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 488,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14556:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"nodeType": "VariableDeclarationStatement",
												"src": "14556:14:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "routerId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "14584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 492,
														"name": "OPENOCEAN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "14596:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "14584:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 499,
															"name": "routerId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "14671:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 500,
															"name": "KYBERSWAP_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "14683:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14671:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 511,
														"nodeType": "Block",
														"src": "14754:52:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "496e76616c696420726f75746572204944",
																			"id": 508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14775:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_ac9fabd74d76a63a39b146ddb74306ea1bdd99f9597697ee4ca262297a287ce7",
																				"typeString": "literal_string \"Invalid router ID\""
																			},
																			"value": "Invalid router ID"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_ac9fabd74d76a63a39b146ddb74306ea1bdd99f9597697ee4ca262297a287ce7",
																				"typeString": "literal_string \"Invalid router ID\""
																			}
																		],
																		"id": 507,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "14768:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14768:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 510,
																"nodeType": "ExpressionStatement",
																"src": "14768:27:0"
															}
														]
													},
													"id": 512,
													"nodeType": "IfStatement",
													"src": "14667:139:0",
													"trueBody": {
														"id": 506,
														"nodeType": "Block",
														"src": "14697:51:0",
														"statements": [
															{
																"expression": {
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 502,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "14711:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 503,
																		"name": "_KYBERSWAP_ROUTER",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "14720:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "14711:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 505,
																"nodeType": "ExpressionStatement",
																"src": "14711:26:0"
															}
														]
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "14580:226:0",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "14610:51:0",
													"statements": [
														{
															"expression": {
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 494,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "14624:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 495,
																	"name": "_OPENOCEAN_ROUTER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "14633:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14624:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 497,
															"nodeType": "ExpressionStatement",
															"src": "14624:26:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 517,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "14838:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 518,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "14844:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 515,
																		"name": "usdc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "14823:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14828:9:0",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 54,
																	"src": "14823:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14823:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 520,
																"name": "usdcAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "14855:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14823:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74205553444320616c6c6f77616e636520666f7220726f75746572",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14867:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5cc9535349ef3cb0374382b4c519eb16b858599e8fbee45a596ae6be2dfb8071",
																"typeString": "literal_string \"Insufficient USDC allowance for router\""
															},
															"value": "Insufficient USDC allowance for router"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5cc9535349ef3cb0374382b4c519eb16b858599e8fbee45a596ae6be2dfb8071",
																"typeString": "literal_string \"Insufficient USDC allowance for router\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14815:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "14815:93:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 526,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "14939:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "14945:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 528,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "14957:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 525,
														"name": "AutoBuyApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "14923:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14923:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "EmitStatement",
												"src": "14918:46:0"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "14156:235:0",
										"text": " @dev Ultra-light auto-buy approval function (hard-coded routers)\n @param user User's wallet address\n @param usdcAmount Amount of USDC to approve\n @param routerId Router ID (0=OpenOcean, 1=KyberSwap)"
									},
									"functionSelector": "2b15e47c",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 482,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 481,
												"name": "onlyOwner",
												"nameLocations": [
													"14509:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "14509:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14509:9:0"
										},
										{
											"id": 484,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 483,
												"name": "whenNotPaused",
												"nameLocations": [
													"14519:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 281,
												"src": "14519:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14519:13:0"
										},
										{
											"id": 486,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 485,
												"name": "nonReentrant",
												"nameLocations": [
													"14533:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "14533:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14533:12:0"
										}
									],
									"name": "approveAutoBuy",
									"nameLocation": "14405:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "14437:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "14429:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "14459:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "14451:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "routerId",
												"nameLocation": "14485:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "14479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14479:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14419:80:0"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14546:0:0"
									},
									"scope": 707,
									"src": "14396:575:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "15386:702:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 552,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "15404:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15410:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "15404:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 554,
																			"name": "usdcAmounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "15420:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15432:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "15420:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15404:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 557,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "15442:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15448:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "15442:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 559,
																			"name": "routerIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 542,
																			"src": "15458:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
																				"typeString": "uint8[] calldata"
																			}
																		},
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15468:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "15458:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15442:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15404:70:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 563,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "15478:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15484:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15478:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15494:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "15478:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15404:93:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4172726179206c656e677468206d69736d61746368206f7220746f6f206c61726765",
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15499:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a35d06fca48b021114d2c65fb939eba459fd0b080c02f0562ca71c99a2bc26f7",
																"typeString": "literal_string \"Array length mismatch or too large\""
															},
															"value": "Array length mismatch or too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a35d06fca48b021114d2c65fb939eba459fd0b080c02f0562ca71c99a2bc26f7",
																"typeString": "literal_string \"Array length mismatch or too large\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15396:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15396:140:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "15396:140:0"
											},
											{
												"body": {
													"id": 637,
													"nodeType": "Block",
													"src": "15589:493:0",
													"statements": [
														{
															"assignments": [
																583
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 583,
																	"mutability": "mutable",
																	"name": "router",
																	"nameLocation": "15611:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 637,
																	"src": "15603:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 582,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15603:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 584,
															"nodeType": "VariableDeclarationStatement",
															"src": "15603:14:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 585,
																		"name": "routerIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "15635:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
																			"typeString": "uint8[] calldata"
																		}
																	},
																	"id": 587,
																	"indexExpression": {
																		"id": 586,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "15645:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15635:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 588,
																	"name": "OPENOCEAN_ID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "15651:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "15635:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 595,
																			"name": "routerIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 542,
																			"src": "15734:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
																				"typeString": "uint8[] calldata"
																			}
																		},
																		"id": 597,
																		"indexExpression": {
																			"id": 596,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "15744:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15734:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 598,
																		"name": "KYBERSWAP_ID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "15750:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "15734:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 609,
																	"nodeType": "Block",
																	"src": "15829:60:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "496e76616c696420726f75746572204944",
																						"id": 606,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15854:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_ac9fabd74d76a63a39b146ddb74306ea1bdd99f9597697ee4ca262297a287ce7",
																							"typeString": "literal_string \"Invalid router ID\""
																						},
																						"value": "Invalid router ID"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_ac9fabd74d76a63a39b146ddb74306ea1bdd99f9597697ee4ca262297a287ce7",
																							"typeString": "literal_string \"Invalid router ID\""
																						}
																					],
																					"id": 605,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "15847:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15847:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 608,
																			"nodeType": "ExpressionStatement",
																			"src": "15847:27:0"
																		}
																	]
																},
																"id": 610,
																"nodeType": "IfStatement",
																"src": "15730:159:0",
																"trueBody": {
																	"id": 604,
																	"nodeType": "Block",
																	"src": "15764:59:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 600,
																					"name": "router",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 583,
																					"src": "15782:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 601,
																					"name": "_KYBERSWAP_ROUTER",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 441,
																					"src": "15791:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "15782:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 603,
																			"nodeType": "ExpressionStatement",
																			"src": "15782:26:0"
																		}
																	]
																}
															},
															"id": 611,
															"nodeType": "IfStatement",
															"src": "15631:258:0",
															"trueBody": {
																"id": 594,
																"nodeType": "Block",
																"src": "15665:59:0",
																"statements": [
																	{
																		"expression": {
																			"id": 592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 590,
																				"name": "router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "15683:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 591,
																				"name": "_OPENOCEAN_ROUTER",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 438,
																				"src": "15692:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "15683:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 593,
																		"nodeType": "ExpressionStatement",
																		"src": "15683:26:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 615,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 536,
																						"src": "15925:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 617,
																					"indexExpression": {
																						"id": 616,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 572,
																						"src": "15931:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "15925:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 618,
																					"name": "router",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 583,
																					"src": "15935:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 613,
																					"name": "usdc",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 435,
																					"src": "15910:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15915:9:0",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "15910:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15910:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 620,
																				"name": "usdcAmounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 539,
																				"src": "15946:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 622,
																			"indexExpression": {
																				"id": 621,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 572,
																				"src": "15958:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15946:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15910:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e74205553444320616c6c6f77616e636520666f7220726f75746572",
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15962:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5cc9535349ef3cb0374382b4c519eb16b858599e8fbee45a596ae6be2dfb8071",
																			"typeString": "literal_string \"Insufficient USDC allowance for router\""
																		},
																		"value": "Insufficient USDC allowance for router"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5cc9535349ef3cb0374382b4c519eb16b858599e8fbee45a596ae6be2dfb8071",
																			"typeString": "literal_string \"Insufficient USDC allowance for router\""
																		}
																	],
																	"id": 612,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "15902:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15902:101:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "ExpressionStatement",
															"src": "15902:101:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 628,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "16038:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 630,
																		"indexExpression": {
																			"id": 629,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "16044:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16038:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 631,
																			"name": "usdcAmounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "16048:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 633,
																		"indexExpression": {
																			"id": 632,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "16060:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16048:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 634,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "16064:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 627,
																	"name": "AutoBuyApproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "16022:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address)"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16022:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 636,
															"nodeType": "EmitStatement",
															"src": "16017:54:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 575,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "15566:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 576,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "15570:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15576:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15570:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15566:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 638,
												"initializationExpression": {
													"assignments": [
														572
													],
													"declarations": [
														{
															"constant": false,
															"id": 572,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15559:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 638,
															"src": "15551:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 571,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15551:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 574,
													"initialValue": {
														"hexValue": "30",
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15563:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15551:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15584:3:0",
														"subExpression": {
															"id": 579,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "15584:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 581,
													"nodeType": "ExpressionStatement",
													"src": "15584:3:0"
												},
												"nodeType": "ForStatement",
												"src": "15546:536:0"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "14977:220:0",
										"text": " @dev Batch auto-buy approval for multiple users/amounts/routers//\n @param users Array of user addresses\n @param usdcAmounts Array of USDC amounts\n @param routerIds Array of router IDs"
									},
									"functionSelector": "1e8bcca5",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 544,
												"name": "onlyOwner",
												"nameLocations": [
													"15349:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "15349:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15349:9:0"
										},
										{
											"id": 547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 546,
												"name": "whenNotPaused",
												"nameLocations": [
													"15359:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 281,
												"src": "15359:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15359:13:0"
										},
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "nonReentrant",
												"nameLocations": [
													"15373:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "15373:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15373:12:0"
										}
									],
									"name": "batchAutoBuy",
									"nameLocation": "15211:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "15252:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "15233:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 534,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15233:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 535,
													"nodeType": "ArrayTypeName",
													"src": "15233:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "usdcAmounts",
												"nameLocation": "15286:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "15267:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 537,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15267:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 538,
													"nodeType": "ArrayTypeName",
													"src": "15267:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "routerIds",
												"nameLocation": "15324:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "15307:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 540,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "15307:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 541,
													"nodeType": "ArrayTypeName",
													"src": "15307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15223:116:0"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15386:0:0"
									},
									"scope": 707,
									"src": "15202:886:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "16174:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 646,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "16184:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16184:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "16184:8:0"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "16094:39:0",
										"text": " @dev Emergency pause"
									},
									"functionSelector": "8456cb59",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 644,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 643,
												"name": "onlyOwner",
												"nameLocations": [
													"16164:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "16164:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16164:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "16147:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16152:2:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16174:0:0"
									},
									"scope": 707,
									"src": "16138:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "16279:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 656,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "16289:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16289:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "16289:10:0"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "16205:31:0",
										"text": " @dev Unpause"
									},
									"functionSelector": "3f4ba83a",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyOwner",
												"nameLocations": [
													"16269:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "16269:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16269:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "16250:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16257:2:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16279:0:0"
									},
									"scope": 707,
									"src": "16241:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "16538:238:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 668,
														"name": "routerId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "16552:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 669,
														"name": "OPENOCEAN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "16564:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16552:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 674,
															"name": "routerId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "16637:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 675,
															"name": "KYBERSWAP_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "16649:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "16637:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 684,
														"nodeType": "Block",
														"src": "16718:52:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "496e76616c696420726f75746572204944",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16739:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_ac9fabd74d76a63a39b146ddb74306ea1bdd99f9597697ee4ca262297a287ce7",
																				"typeString": "literal_string \"Invalid router ID\""
																			},
																			"value": "Invalid router ID"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_ac9fabd74d76a63a39b146ddb74306ea1bdd99f9597697ee4ca262297a287ce7",
																				"typeString": "literal_string \"Invalid router ID\""
																			}
																		],
																		"id": 680,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "16732:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16732:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 683,
																"nodeType": "ExpressionStatement",
																"src": "16732:27:0"
															}
														]
													},
													"id": 685,
													"nodeType": "IfStatement",
													"src": "16633:137:0",
													"trueBody": {
														"id": 679,
														"nodeType": "Block",
														"src": "16663:49:0",
														"statements": [
															{
																"expression": {
																	"id": 677,
																	"name": "_KYBERSWAP_ROUTER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "16684:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"functionReturnParameters": 667,
																"id": 678,
																"nodeType": "Return",
																"src": "16677:24:0"
															}
														]
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "16548:222:0",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "16578:49:0",
													"statements": [
														{
															"expression": {
																"id": 671,
																"name": "_OPENOCEAN_ROUTER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "16599:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"functionReturnParameters": 667,
															"id": 672,
															"nodeType": "Return",
															"src": "16592:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "16312:147:0",
										"text": " @dev Get router address by ID\n @param routerId Router ID (0=OpenOcean, 1=KyberSwap)\n @return Router contract address"
									},
									"functionSelector": "cac73ed7",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRouterAddress",
									"nameLocation": "16473:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "routerId",
												"nameLocation": "16496:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "16490:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 662,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16490:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16489:16:0"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "16529:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16528:9:0"
									},
									"scope": 707,
									"src": "16464:312:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "16941:41:0",
										"statements": [
											{
												"expression": {
													"id": 694,
													"name": "_OPENOCEAN_ROUTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 438,
													"src": "16958:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 693,
												"id": 695,
												"nodeType": "Return",
												"src": "16951:24:0"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "16782:92:0",
										"text": " @dev Get OpenOcean router address\n @return OpenOcean router address"
									},
									"functionSelector": "612e3146",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOpenOceanRouter",
									"nameLocation": "16888:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16906:2:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "16932:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16931:9:0"
									},
									"scope": 707,
									"src": "16879:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "17147:41:0",
										"statements": [
											{
												"expression": {
													"id": 703,
													"name": "_KYBERSWAP_ROUTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 441,
													"src": "17164:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 702,
												"id": 704,
												"nodeType": "Return",
												"src": "17157:24:0"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "16988:92:0",
										"text": " @dev Get KyberSwap router address\n @return KyberSwap router address"
									},
									"functionSelector": "57df19e6",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKyberSwapRouter",
									"nameLocation": "17094:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17112:2:0"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "17138:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17137:9:0"
									},
									"scope": 707,
									"src": "17085:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 708,
							"src": "13428:3762:0",
							"usedErrors": [
								117,
								122,
								270,
								273,
								369
							],
							"usedEvents": [
								128,
								262,
								267,
								455
							]
						}
					],
					"src": "133:17057:0"
				},
				"id": 0
			}
		}
	}
}